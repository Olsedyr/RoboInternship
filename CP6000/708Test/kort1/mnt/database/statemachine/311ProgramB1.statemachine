STATEMACHINEVERSION 3
Name=ProgramB1
;*******************************************
;* LINK's                 
;*******************************************
Link=program Program311
Link=parent Parent
Link=robot Robot
Link=Tool
Link=ConveyorOut
Link=Pallebane6
;*******************************************
;* VALUE's                
;*******************************************
linkValue=wBLayer Program311
linkValue=wBItemsPerLayer Program311
linkValue=timeInPalletB Program311
linkValue=WorkCellFirstRun firstRun WorkCell
;when roboError > 0 and restart = 1 the workcell can be restarted 
linkValue=restart RoboError 
linkValue=resetpreload Loader 
;when 2 or more path's must run as one - set delaystop = 1
;before start off first path and = 0 after last
;executer will test this value before pausing execution
linkValue=delaystop Robot
linkValue=axis_t Robot
linkValue=pathtype Robot
linkValue=casekind Program311
linkValue=nextpalb Frames
linkValue=userPalletOut Frames
linkValue=cBItem Frames
linkValue=wBItem Frames
linkValue=roboMessageCached RoboError
Value=errorCode 0
Const=sBItem 0
Value=leftright 0
Value=loaded 0
Value=temp 0
Value=ftemp 0.0
Value=cBStackleft 0
Value=cBStackright 0
Value=strapProg 0
Value=strapEnable6 0
Value=palletStackable6 0
Value=batchCount 0
; left = palletB1
; right = palletB0
;*******************************************
;* FRAME LINKVALUE's                
;*******************************************
linkValue=base Frames 
linkValue=home Frames
linkValue=homeHigh Frames
linkValue=palletB0 Frames
linkValue=palletB1 Frames
linkValue=conveyorB Frames
;linkValue=palletA0 Frames
;linkValue=palletA1 Frames
;linkValue=palletB0P Frames
;linkValue=palletB0PH Frames
;linkValue=palletB1P Frames
;linkValue=conveyorA Frames
;linkValue=conveyorBP Frames
;linkValue=palletA Frames
;linkValue=palletB Frames
;linkValue=homeP Frames
;*******************************************
;* ALL EXISTING PATH TYPES
;*******************************************
;Path=home_palletA0            20 20
;Path=home_palletA1            21 20
;Path=palletA0_conveyorA       20 21
;Path=palletA1_conveyorA       21 21
;Path=palletA0_palletA1        20 50
;Path=palletA1_palletA0        21 51
;Path=palletA0_home            20 40
;Path=palletA1_home            21 40
;Path=conveyorA_home           20 22
;Path=conveyorA_palletA0       20 52
;Path=conveyorA_palletA1       21 52
;Path=conveyorA_conveyorB      20 53
;
;Path=palletB1_palletA0        20 54
;Path=palletB1_palletA1        21 54
;Path=palletB0_palletA0        22 54
;Path=palletB0_palletA1        23 54

Path=home_conveyorB            21 23
Path=conveyorB_palletB0        21 24
;Path=NettoconveyorB_palletB0  31 24
Path=palletB0_home             21 25
;
Path=conveyorB_palletB1        22 24
;Path=conveyorB_palletB1_first 23 24
;Path=NettoconveyorB_palletB1  32 24
Path=palletB1_home             22 25
;
Path=palletB0_conveyorB        21 44
Path=palletB1_conveyorB        22 44
Path=conveyorB_home            21 43
Path=home_home                 21 16

Value=B0normalmode 21
Value=B1normalmode 22
Value=B1firstmode 23
;*******************************************
;* ITEM's                    
;*******************************************
Item=item C11
Item=itemC11 C11
Item=itemC18 C18
Item=itemNetto Netto
Item=itemIFCO16 IFCO16
Item=itemIFCO18 IFCO18
Item=itemIFCO20 IFCO20
;*******************************************
;* PATTERN's                 
;*******************************************
;Pattern=patternB 30410Kg_80
;*******************************************
;* FRAME's
;*******************************************
Frame=fromFrame x=0.0 y=0.0 z=0.0 v=0.0 w=0.0 u=0.0 
Frame=toFrame x=0.0 y=0.0 z=0.0 v=0.0 w=0.0 u=0.0 
;*******************************************
;* TIMEOUT's                    
;*******************************************
Timeout=TimeInPalletB 300000
;*******************************************
;* STATES                    
;*******************************************
State=ST_HALT
END

State=ST_TIMER
END

State=ST_ERROR
	TEST parent != ST_RUN
		SETSTATE ST_IDLE
	ENDTEST
END

State=ST_IDLE
  SET delaystop 0
  TEST parent = ST_RUN
		SET errorCode 0
    SETSTATE ST_RESET
  ENDTEST
END

State=ST_RESET
	SET TimeInPalletB timeInPalletB
	SET loaded 0
	SET errorCode 0
	;set state = ST_IDLE for alle path's and set maxidx = 0 in pathTable
	;stafet value
  TEST resetpreload = 0
    SET resetpreload 1
  ENDTEST
  TEST resetpreload = 3
    SET resetpreload 0
    TEST WorkCellFirstRun = 1
    OR restart = 0
	    SETSTATE ST_START
    ELSE
      SETSTATE ST_RESTART
    ENDTEST
  ENDTEST
END

;*******************************************
;* RESTART FROM SOMEWHERE
;*******************************************
State=ST_RESTART
	;  kun een bopt fil for hver robot
	;  en ppscripttype for hver konfiguration(tool)
  SET delaystop 0 
  TEST home_home.state < ST_INACTIVE
    LOAD home_home homeHigh home 
    SETSTATE ST_WAIT_HOME_HOME_LOADED
  ENDTEST
END
;*******************************************
;* START FROM SCRATCH
;*******************************************
State=ST_START
;  kun een bopt fil for hver robot
;  en ppscripttype for hver konfiguration(tool)
  SET delaystop 0
  TEST home_home.state < ST_INACTIVE
		SET B0normalmode 21
		SET B1normalmode 22
		TEST casekind = 1
			SETITEM item itemC11
			SET strapProg 2
		ELSE
			TEST casekind = 3
				SETITEM item itemC18
				SET strapProg 2
			ELSE
				TEST casekind = 6
					SET B0normalmode 31
					SET B1normalmode 32
					SETITEM item itemNetto
					SET strapProg 1
				ELSE
					TEST casekind = 8
						SETITEM item itemIFCO16
						SET strapProg 0
					ELSE
						TEST casekind = 9
							SETITEM item itemIFCO18
							SET strapProg 0
						ELSE
							TEST casekind = 10
								SETITEM item itemIFCO20
								SET strapProg 0
							ENDTEST
						ENDTEST
					ENDTEST
				ENDTEST
			ENDTEST
		ENDTEST
		CALC wBItem = wBLayer * wBItemsPerLayer
    SET cBItem sBItem
		CALC cBStackleft = sBItem / 2
		CALC cBStackright = sBItem / 2
    SET restart 1
		SET nextpalb 1
		SET strapEnable6 0
    SET palletStackable6 0
    LOAD home_home homeHigh home 
	  SETSTATE ST_WAIT_HOME_HOME_LOADED
  ENDTEST
END
;*******************************************
;* ST_WAIT_HOME_HOME_LOADED
;*******************************************
State=ST_WAIT_HOME_HOME_LOADED
  TEST home_home.state = ST_LOADED
	  TEST home_conveyorB.state < ST_INACTIVE
      SETFRAME toFrame conveyorB
      CALC toFrame.y = toFrame.y + item.gy
			CALC toFrame.x = toFrame.x - item.gx
      LOAD home_conveyorB home toFrame 
      SET delaystop 0
      EXEC home_home
      SETSTATE ST_HOME_HOME
    ENDTEST
  ENDTEST
END
;*******************************************
;*
;*       F R A M E - S T A T E S
;*
;*******************************************
;*******************************************
;* ST_HOME
;*******************************************
State=ST_HOME
  TEST parent = ST_RUN
	AND roboMessageCached = 0
    TEST home_conveyorB.state = ST_LOADED
			TEST loaded = 0
      AND conveyorB_palletB0.state < ST_INACTIVE
      AND conveyorB_palletB1.state < ST_INACTIVE
      AND conveyorB_home.state < ST_INACTIVE
				;*******************************************
				TEST userPalletOut = 1
					SET nextpalb 1
					SET userPalletOut 0
          TEST cBItem = wBItem
						SET strapEnable6 1
            SET palletStackable6 1
          ENDTEST
					SET cBItem sBItem
					CALC cBStackleft = sBItem / 2
					CALC cBStackright = sBItem / 2
				ENDTEST
        CALC temp = cBItem % 2 
				TEST cBItem = 0
					SET leftright 0
				ELSE
					TEST cBItem = 1
					OR temp = 0
						SET leftright 1
					ELSE
						SET leftright 0
					ENDTEST
				ENDTEST
				SETFRAME fromFrame conveyorB
				CALC fromFrame.y = fromFrame.y + item.gy
				CALC fromFrame.x = fromFrame.x - item.gx
				;*******************************************
				TEST leftright = 1
					SETFRAME toFrame palletB0
					CALC ftemp = item.sy * cBStackright
					CALC toFrame.y = toFrame.y + ftemp
					CALC toFrame.y = toFrame.y + item.my
					SET conveyorB_palletB0.mode B0normalmode
					LOAD conveyorB_palletB0 fromFrame toFrame
				ELSE
					;*******************************************
					SETFRAME toFrame palletB1
					CALC ftemp = item.sy * cBStackleft
					CALC toFrame.y = toFrame.y + ftemp
					CALC toFrame.y = toFrame.y + item.my
					TEST cBItem = 0
						SET conveyorB_palletB1.mode B1firstmode
					ELSE
						SET conveyorB_palletB1.mode B1normalmode
					ENDTEST
					LOAD conveyorB_palletB1 fromFrame toFrame
				ENDTEST
				;*******************************************
        LOAD conveyorB_home fromFrame home
				SET loaded 1
			ENDTEST
			;*******************************************
			TEST loaded = 1
			AND ConveyorOut = ST_READY_ROBOT
			AND Pallebane6 = ST_READY_ROBOT
			AND Tool = ST_GO
			AND nextpalb = 0
				SET delaystop 1
				EXEC home_conveyorB 
				SETSTATE ST_HOME_CONVEYORB
			ENDTEST
    ENDTEST
  ELSE
		TEST roboMessageCached = 333
			SET errorCode 333
			SETSTATE ST_ERROR
		ELSE
			SETSTATE ST_IDLE
		ENDTEST
  ENDTEST
END
;*******************************************
;* ST_CONVEYORB
;*******************************************
State=ST_CONVEYORB
	TEST parent = ST_RUN
	AND ConveyorOut = ST_READY_ROBOT
	AND Pallebane6 = ST_READY_ROBOT
	AND userPalletOut = 0
		TEST leftright = 1
			TEST conveyorB_palletB0.state = ST_LOADED
				TEST loaded = 0
				AND palletB0_home.state < ST_INACTIVE
				AND palletB0_conveyorB.state < ST_INACTIVE
					;*****************************************
					SETFRAME fromFrame palletB0
					CALC ftemp = item.sy * cBStackright
					CALC fromFrame.y = fromFrame.y + ftemp
					CALC fromFrame.y = fromFrame.y + item.my
					SETFRAME toFrame conveyorB
					CALC toFrame.y = toFrame.y + item.gy
					CALC toFrame.x = toFrame.x - item.gx
					LOAD palletB0_conveyorB fromFrame toFrame
					;*****************************************
					LOAD palletB0_home fromFrame home
					;*****************************************
					SET loaded 1
				ENDTEST
				TEST loaded = 1
				AND Tool = ST_GO
					SET delaystop 1
					EXEC conveyorB_palletB0
					SETSTATE ST_CONVEYORB_PALLETB0
				ENDTEST
			ENDTEST
		ELSE
			TEST conveyorB_palletB1.state = ST_LOADED
				TEST loaded = 0
				AND palletB1_home.state < ST_INACTIVE
				AND palletB1_conveyorB.state < ST_INACTIVE
					;*******************************************
					SETFRAME fromFrame palletB1
					CALC ftemp = item.sy * cBStackleft
					CALC fromFrame.y = fromFrame.y + ftemp
					CALC fromFrame.y = fromFrame.y + item.my
					SETFRAME toFrame conveyorB
					CALC toFrame.y = toFrame.y + item.gy
					CALC toFrame.x = toFrame.x - item.gx
					LOAD palletB1_conveyorB fromFrame toFrame
					;*******************************************
					LOAD palletB1_home fromFrame home 
					;*******************************************
					SET loaded 1
				ENDTEST
				TEST loaded = 1
				AND Tool = ST_GO
					SET delaystop 1
					EXEC conveyorB_palletB1
					SETSTATE ST_CONVEYORB_PALLETB1
				ENDTEST
			ENDTEST
		ENDTEST
	ELSE
		TEST conveyorB_home.state = ST_LOADED
			TEST home_conveyorB.state < ST_INACTIVE 
				;*******************************************
				SETFRAME toFrame conveyorB
				CALC toFrame.y = toFrame.y + item.gy
				CALC toFrame.x = toFrame.x - item.gx
				LOAD home_conveyorB home toFrame 
				;*******************************************
				; tool doesn't have to be ST_GO before exec because
				; opendelay is hardcoded=1s for path 43 in trio.
				EXEC conveyorB_home 
				SETSTATE ST_CONVEYORB_HOME
			ENDTEST
		ENDTEST
	ENDTEST
END

;*******************************************
;* ST_PALLETB0
;*******************************************
State=ST_PALLETB0
  TEST parent = ST_RUN
	AND ConveyorOut = ST_READY_ROBOT
	AND Pallebane6 = ST_READY_ROBOT
	AND cBItem < wBItem 
	AND userPalletOut = 0
	AND roboMessageCached = 0
		TEST palletB0_conveyorB.state = ST_LOADED
			TEST loaded != 1
		  AND conveyorB_palletB0.state < ST_INACTIVE
		  AND conveyorB_palletB1.state < ST_INACTIVE
			AND conveyorB_home.state < ST_INACTIVE 
				CALC temp = cBItem % 2 
				TEST cBItem = 0
					SET leftright 0
				ELSE
					TEST cBItem = 1
					OR temp = 0
						SET leftright 1
					ELSE
						SET leftright 0
					ENDTEST
				ENDTEST
				SETFRAME fromFrame conveyorB
		    CALC fromFrame.y = fromFrame.y + item.gy
		    CALC fromFrame.x = fromFrame.x - item.gx
		    TEST leftright = 1
					;*******************************************
		      SETFRAME toFrame palletB0
		      CALC ftemp = item.sy * cBStackright
		      CALC toFrame.y = toFrame.y + ftemp
		      CALC toFrame.y = toFrame.y + item.my
					SET conveyorB_palletB0.mode B0normalmode
					LOAD conveyorB_palletB0 fromFrame toFrame
		    ELSE
					;*******************************************
		    	SETFRAME toFrame palletB1
		      CALC ftemp = item.sy * cBStackleft
		      CALC toFrame.y = toFrame.y + ftemp
		      CALC toFrame.y = toFrame.y + item.my
					TEST cBItem = 0
						SET conveyorB_palletB1.mode B1firstmode
					ELSE
						SET conveyorB_palletB1.mode B1normalmode
					ENDTEST
					LOAD conveyorB_palletB1 fromFrame toFrame
		    ENDTEST
				;*******************************************
		    LOAD conveyorB_home fromFrame home
				SET loaded 1
				;*******************************************
			ENDTEST
			TEST loaded = 1
			AND Tool = ST_GO
				SET delaystop 1
		    EXEC palletB0_conveyorB
		    SETSTATE ST_PALLETB0_CONVEYORB
		  ENDTEST
		ENDTEST
	ELSE
		TEST TimeInPalletB = 1
		OR parent != ST_RUN
		OR cBItem >= wBItem 
		OR userPalletOut = 1
		OR roboMessageCached != 0
			TEST palletB0_home.state = ST_LOADED
				TEST loaded != 2
				AND home_conveyorB.state < ST_INACTIVE
					;*******************************************
					SETFRAME toFrame conveyorB
					CALC toFrame.y = toFrame.y + item.gy
					CALC toFrame.x = toFrame.x - item.gx
					LOAD home_conveyorB home toFrame 
					;*******************************************
					SET loaded 2
				ENDTEST
				TEST loaded = 2
				AND Tool = ST_GO
					EXEC palletB0_home 
					SETSTATE ST_PALLETB0_HOME
				ENDTEST
			ENDTEST
		ENDTEST
	ENDTEST
END
;*******************************************
;* ST_PALLETB1
;*******************************************
State=ST_PALLETB1
  TEST parent = ST_RUN
	AND ConveyorOut = ST_READY_ROBOT
	AND Pallebane6 = ST_READY_ROBOT
	AND cBItem < wBItem
	AND userPalletOut = 0
	AND roboMessageCached = 0
    TEST palletB1_conveyorB.state = ST_LOADED
			TEST loaded != 1
			AND conveyorB_palletB0.state < ST_INACTIVE
			AND conveyorB_palletB1.state < ST_INACTIVE
			AND conveyorB_home.state < ST_INACTIVE 
				CALC temp = cBItem % 2 
				TEST cBItem = 0
					SET leftright 0
				ELSE
					TEST cBItem = 1
					OR temp = 0
						SET leftright 1
					ELSE
						SET leftright 0
					ENDTEST
				ENDTEST
				SETFRAME fromFrame conveyorB
				CALC fromFrame.y = fromFrame.y + item.gy
				CALC fromFrame.x = fromFrame.x - item.gx
		    TEST leftright = 1
					;******************************************
          SETFRAME toFrame palletB0
          CALC ftemp = item.sy * cBStackright
          CALC toFrame.y = toFrame.y + ftemp
          CALC toFrame.y = toFrame.y + item.my
					SET conveyorB_palletB0.mode B0normalmode
          LOAD conveyorB_palletB0 fromFrame toFrame
        ELSE
					;*******************************************
		    	SETFRAME toFrame palletB1
		      CALC ftemp = item.sy * cBStackleft
		      CALC toFrame.y = toFrame.y + ftemp
		      CALC toFrame.y = toFrame.y + item.my
					TEST cBItem = 0
						SET conveyorB_palletB1.mode B1firstmode
					ELSE
						SET conveyorB_palletB1.mode B1normalmode
					ENDTEST
					LOAD conveyorB_palletB1 fromFrame toFrame
		    ENDTEST
				;*******************************************
        LOAD conveyorB_home fromFrame home
				SET loaded 1
				;*******************************************
			ENDTEST
			TEST loaded = 1
			AND Tool = ST_GO
        SET delaystop 1
        EXEC palletB1_conveyorB
        SETSTATE ST_PALLETB1_CONVEYORB
      ENDTEST
    ENDTEST
  ELSE
		TEST TimeInPalletB = 1
		OR parent != ST_RUN
		OR cBItem >= wBItem 
		OR userPalletOut = 1
		OR roboMessageCached != 0
			TEST palletB1_home.state = ST_LOADED
				TEST loaded != 2
				AND home_conveyorB.state < ST_INACTIVE
					;*******************************************
					SETFRAME toFrame conveyorB
					CALC toFrame.y = toFrame.y + item.gy
					CALC toFrame.x = toFrame.x - item.gx
					LOAD home_conveyorB home toFrame 
					SET loaded 2
					;*******************************************
				ENDTEST
				TEST loaded = 2
				AND Tool = ST_GO
					EXEC palletB1_home 
					SETSTATE ST_PALLETB1_HOME
				ENDTEST
			ENDTEST
		ENDTEST
	ENDTEST
END
;*******************************************
;*
;*       P A T H - S T A T E S
;*
;*******************************************
;*******************************************
;* ST_HOME_HOME
;*******************************************
State=ST_HOME_HOME
  TEST home_home.state = ST_EXECUTING
		;    TEST axis_t > 500000
		;     SET griber 1
		;    ENDTEST
  ELSE
    TEST home_home.state = ST_FINISHED
			SET loaded 0
      SETSTATE ST_HOME
    ELSE
      TEST home_home.state = ST_ERROR
        TEST parent = ST_IDLE
          SETSTATE ST_IDLE
        ENDTEST 
      ENDTEST
    ENDTEST
  ENDTEST
END
;*******************************************
;* ST_HOME_CONVEYORB
;*******************************************
State=ST_HOME_CONVEYORB
  TEST home_conveyorB.state = ST_EXECUTING
		;    TEST axis_t > 900000
		;      SET griber 1
		;    ENDTEST
  ELSE
    TEST home_conveyorB.state = ST_FINISHED
			SET loaded 0
      SETSTATE ST_CONVEYORB
    ELSE
      TEST home_conveyorB.state = ST_ERROR
        TEST parent = ST_IDLE
          SETSTATE ST_IDLE
        ENDTEST 
      ENDTEST
    ENDTEST
  ENDTEST
END
;*******************************************
;* ST_CONVEYORB_HOME
;*******************************************
State=ST_CONVEYORB_HOME
  TEST conveyorB_home.state = ST_EXECUTING
		SET delaystop 0
		;    TEST axis_t > 900000
		;      SET griber 1
		;    ENDTEST
  ELSE
		TEST conveyorB_home.state = ST_FINISHED
			SET loaded 0
			SETSTATE ST_HOME
		ELSE
			TEST conveyorB_home.state = ST_ERROR
				TEST parent = ST_IDLE
					SETSTATE ST_IDLE
				ENDTEST 
			ENDTEST
		ENDTEST
	ENDTEST
END
;*******************************************
;* ST_CONVEYORB_PALLETB0
;*******************************************
State=ST_CONVEYORB_PALLETB0
  TEST conveyorB_palletB0.state = ST_EXECUTING
		;    TEST axis_t > 900000
		;      SET griber 1
		;    ENDTEST
  ELSE
    TEST conveyorB_palletB0.state = ST_FINISHED
      CALC cBItem = cBItem + 1
			CALC cBStackright = cBStackright + 1
      PRINT cBItem
			SET loaded 0
			CALC batchCount = batchCount - 2
			TIMEOUT TimeInPalletB ST_PALLETB0
      SETSTATE ST_PALLETB0
    ELSE
      TEST conveyorB_palletB0.state = ST_ERROR
        TEST parent = ST_IDLE
          SETSTATE ST_IDLE
        ENDTEST 
      ENDTEST
    ENDTEST
  ENDTEST
END
;*******************************************
;* ST_CONVEYORB_PALLETB1
;*******************************************
State=ST_CONVEYORB_PALLETB1
  TEST conveyorB_palletB1.state = ST_EXECUTING
  	;    TEST axis_t > 900000
		;      SET griber 1
		;    ENDTEST
	ELSE
    TEST conveyorB_palletB1.state = ST_FINISHED
      CALC cBItem = cBItem + 1
			CALC cBStackleft = cBStackleft + 1
      PRINT cBItem
			SET loaded 0
			CALC batchCount = batchCount - 2
			TIMEOUT TimeInPalletB ST_PALLETB1
      SETSTATE ST_PALLETB1
    ELSE
      TEST conveyorB_palletB1.state = ST_ERROR
        TEST parent = ST_IDLE
          SETSTATE ST_IDLE
        ENDTEST 
      ENDTEST
    ENDTEST
  ENDTEST
END
;*******************************************
;* ST_PALLETB0_CONVEYORB
;*******************************************
State=ST_PALLETB0_CONVEYORB
  TEST palletB0_conveyorB.state = ST_EXECUTING
		;    TEST axis_t > 900000
		;      SET griber 1
		;    ENDTEST
  ELSE
    TEST palletB0_conveyorB.state = ST_FINISHED
			SET loaded 0
      SETSTATE ST_CONVEYORB
    ELSE
      TEST palletB0_conveyorB.state = ST_ERROR
        TEST parent = ST_IDLE
          SETSTATE ST_IDLE
        ENDTEST 
      ENDTEST
    ENDTEST
  ENDTEST
END
;*******************************************
;* ST_PALLETB1_CONVEYORB
;*******************************************
State=ST_PALLETB1_CONVEYORB
  TEST palletB1_conveyorB.state = ST_EXECUTING
		;    TEST axis_t > 900000
		;      SET griber 1
		;    ENDTEST
  ELSE
    TEST palletB1_conveyorB.state = ST_FINISHED
			SET loaded 0
      SETSTATE ST_CONVEYORB
    ELSE
      TEST palletB1_conveyorB.state = ST_ERROR
        TEST parent = ST_IDLE
          SETSTATE ST_IDLE
        ENDTEST 
      ENDTEST
    ENDTEST
  ENDTEST
END
;*******************************************
;* ST_PALLETB0_HOME
;*******************************************
State=ST_PALLETB0_HOME
  TEST palletB0_home.state = ST_EXECUTING
		SET delaystop 0
  ELSE
    TEST palletB0_home.state = ST_FINISHED
			TEST cBItem >= wBItem
				SET cBItem sBItem
				CALC cBStackleft = sBItem / 2
				CALC cBStackright = sBItem / 2
				SET nextpalb 1
				SET strapEnable6 1
        SET palletStackable6 1
			ENDTEST
			SET loaded 0
      SETSTATE ST_HOME
    ELSE
      TEST palletB0_home.state = ST_ERROR
        TEST parent = ST_IDLE
          SETSTATE ST_IDLE
        ENDTEST 
      ENDTEST
    ENDTEST
  ENDTEST
END
;*******************************************
;* ST_PALLETB1_HOME
;*******************************************
State=ST_PALLETB1_HOME
  TEST palletB1_home.state = ST_EXECUTING
		SET delaystop 0
  ELSE
    TEST palletB1_home.state = ST_FINISHED
			TEST cBItem >= wBItem
				SET cBItem sBItem
				CALC cBStackleft = sBItem / 2
				CALC cBStackright = sBItem / 2
				SET nextpalb 1
				SET strapEnable6 1
        SET palletStackable6 1
			ENDTEST
			SET loaded 0
      SETSTATE ST_HOME
    ELSE
      TEST palletB1_home.state = ST_ERROR
        TEST parent = ST_IDLE
          SETSTATE ST_IDLE
        ENDTEST 
      ENDTEST
    ENDTEST
  ENDTEST
END
