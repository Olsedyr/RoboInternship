STATEMACHINEVERSION 3
Include=randomvalues.statemachine
Include=rclpattern.statemachine
Name=ProgramB2
;*******************************************
;* LINK's                 
;*******************************************
Link=program Program402
Link=parent Parent
Link=robot Robot
Link=ConveyorOut ConveyorOut
Link=Pallebane6 Pallebane6
;*******************************************
;* VALUE's                
;*******************************************
linkValue=wBItemsPerLayer program 
linkValue=wBItems program
linkValue=timeInPalletB program
linkValue=robotspeedpct program
linkValue=autorobotspeed program
linkValue=pattern program
linkValue=WorkCellFirstRun firstRun WorkCell
;when roboError > 0 and restart = 1 the workcell can be restarted 
linkValue=restart RoboError 
linkValue=resetpreload Loader 
;when 2 or more path's must run as one - set delaystop = 1
;before start off first path and = 0 after last
;executer will test this value before pausing execution
linkValue=delaystop Robot
linkValue=axis_t Robot
linkValue=pathtype Robot
linkValue=nextpalb Frames
linkValue=userPalletOut Frames
linkValue=cBItem Frames
linkValue=itemCounter Frames
linkValue=wBItem Frames
linkValue=roboMessageCached RoboError
linkValue=moveBag ConveyorOut
linkValue=bagsPerMove Program402
linkValue=twoLastBagCount Program402
linkValue=mposreq Robot
linkValue=mpostcpidx Robot
linkValue=manuelt manuelt Program402
Value=errorCode 0
Const=sBItem 0
Value=loaded 0
Value=restInLayer 0
Value=ftemp 0.0
Value=temp 0
Value=wBItemMinusTwo 0
Value=nextBagCount 0
Const=xvarimin -50.0000
Const=xvarimax 50.0000
Const=zvarimin -5.0000
Const=zvarimax 5.0000
Const=thisSeed 30
Value=rbspeed 0.0
Value=simulate 0
Const=posspstep 5.0
Const=negspstep 1.0
;*******************************************
;* TOOL OUTPUT                      
;*******************************************
Output=griber "Tool Griber"
;*******************************************
;* FRAME LINKVALUE's               
;*******************************************
linkValue=base Frames
linkValue=home Frames
linkValue=homeHigh Frames
linkValue=crateA Frames
linkValue=crateB Frames
linkValue=crateAp Frames
linkValue=crateBp Frames
linkValue=conveyorB Frames
linkValue=mpos Robot
;*******************************************
;* ALL EXISTING PATH TYPES
;*******************************************
Path=home_conveyorB            21 23
Path=conveyorB_palletB         21 24
Path=palletB_home              21 25
;
Path=palletB_conveyorB         21 44
Path=conveyorB_home            21 43
Path=home_home                 21 16

Value=CrateAmode 21
Value=CrateBmode 21

;*******************************************
;* ITEM's                    
;*******************************************
;*******************************************
;* PATTERN's                 
;*******************************************
Pattern=patternB 2Kg_40
Pattern=p1Kg_80 1Kg_80
Pattern=p2Kg_40 2Kg_40
;*******************************************
;* FRAME's
;*******************************************
Frame=fromFrame x=0.0 y=0.0 z=0.0 v=0.0 w=0.0 u=0.0 
Frame=toFrame x=0.0 y=0.0 z=0.0 v=0.0 w=0.0 u=0.0 
;*******************************************
;* TIMEOUT's                    
;*******************************************
Timeout=TimeInPalletB 300000
;*******************************************
;* STATES                    
;*******************************************
State=ST_HALT
END

State=ST_TIMER
END

State=ST_ERROR
	TEST parent != ST_RUN
		SETSTATE ST_IDLE
	ENDTEST
END

State=ST_IDLE
	SET delaystop 0
  TEST parent = ST_RUN
	AND manuelt = 0
		SET errorCode 0
    SETSTATE ST_RESET
  ENDTEST
END

State=ST_RESET
	SET TimeInPalletB timeInPalletB
	SET loaded 0
	SET errorCode 0
  TEST WorkCellFirstRun = 1
    SET restart 0
  ENDTEST
	;set state = ST_IDLE for alle path's and set maxidx = 0 in pathTable
	;stafet value
  TEST resetpreload = 0
    SET resetpreload 1
  ENDTEST
  TEST resetpreload = 3
    SET resetpreload 0
    TEST restart = 0
	    SETSTATE ST_START
    ELSE
			SETSTATE ST_RESTART
		ENDTEST
  ENDTEST
END

;*******************************************
;* RESTART FROM SOMEWHERE
;*******************************************
State=ST_RESTART
	;  kun een bopt fil for hver robot
	;  en ppscripttype for hver konfiguration(tool)
  SET delaystop 0
  TEST home_home.state < ST_INACTIVE
    LOAD home_home homeHigh home 
    SETSTATE ST_WAIT_HOME_HOME_LOADED
  ENDTEST
END
;*******************************************
;* START FROM SCRATCH
;*******************************************
State=ST_START
	SET rbspeed robotspeedpct
	INLINE inlineRobotSpeed.statemachine
  SET delaystop 0
	TEST mposreq = 0
		SET mpostcpidx 1
		SET mposreq 1
	ENDTEST
	TEST simulate = 1
	  SET mposreq 2
  ENDTEST
  TEST home_home.state < ST_INACTIVE
	AND palletB_home.state < ST_INACTIVE
	AND mposreq = 2
		SET randseed thisSeed
		INLINE inlineSeedRandom.statemachine
		TEST pattern = rclpattern_1Kg_80
			SETPATTERN patternB p1Kg_80
		ENDTEST
		TEST pattern = rclpattern_2Kg_40
			SETPATTERN patternB p2Kg_40
		ENDTEST
    SET moveBag 0
		SET wBItem wBItems
    CALC wBItemMinusTwo = wBItem - 3
    SET nextBagCount bagsPerMove
    SET cBItem sBItem
    SET itemCounter 0
		SET userPalletOut 1
		TEST mpos.y < 1200.00
		AND simulate = 0
			SET mposreq 0
			LOAD palletB_home mpos home
			SETSTATE ST_WAIT_MPOS_HOME_LOADED
		ELSE
			SET mposreq 0
			LOAD home_home homeHigh home
			SETSTATE ST_WAIT_HOME_HOME_LOADED
		ENDTEST
  ENDTEST
END

;*******************************************
;* ST_WAIT_HOME_HOME_LOADED
;*******************************************
State=ST_WAIT_MPOS_HOME_LOADED
  TEST palletB_home.state = ST_LOADED
	  TEST home_conveyorB.state < ST_INACTIVE
      SETFRAME toFrame conveyorB
      LOAD home_conveyorB home toFrame
			SET delaystop 1
      PRINT palletB_home
      EXEC palletB_home
      SETSTATE ST_PALLETB_HOME
    ENDTEST
  ENDTEST
END

;*******************************************
;* ST_WAIT_HOME_HOME_LOADED
;*******************************************
State=ST_WAIT_HOME_HOME_LOADED
  TEST home_home.state = ST_LOADED
	  TEST home_conveyorB.state < ST_INACTIVE
      SETFRAME toFrame conveyorB
      LOAD home_conveyorB home toFrame 
			SET delaystop 1
      PRINT home_home
      EXEC home_home
      SETSTATE ST_HOME_HOME
    ENDTEST
  ENDTEST
END
;*******************************************
;*
;*       F R A M E - S T A T E S
;*
;*******************************************
;*******************************************
;* ST_HOME
;*******************************************
State=ST_HOME
  TEST parent = ST_RUN
	AND roboMessageCached = 0
    TEST home_conveyorB.state = ST_LOADED
			TEST loaded = 0
      AND conveyorB_palletB.state < ST_INACTIVE
      AND conveyorB_home.state < ST_INACTIVE
        TEST userPalletOut = 1
        OR cBItem >= wBItem
					SET nextpalb 1
          SET userPalletOut 0
          SET cBItem sBItem 
          SET itemCounter 0 
	      ENDTEST
				TEST Pallebane6 = ST_READY_ROBOT
				AND nextpalb = 0
          INLINE 402inlineLoadConveyorBp.statemachine
;          INLINE 402inlineLoadConveyorB.statemachine
					SET loaded 1
        ENDTEST
			ENDTEST
			TEST loaded = 1
			AND Pallebane6 = ST_READY_ROBOT
			AND nextpalb = 0
				SET delaystop 1
				SET restart 1
				PRINT home_conveyorB
				EXEC home_conveyorB
				SETSTATE ST_HOME_CONVEYORB
			ENDTEST
    ENDTEST
  ELSE
		TEST roboMessageCached = 333
			SET errorCode 333
			SETSTATE ST_ERROR
		ELSE
			SETSTATE ST_IDLE
		ENDTEST
  ENDTEST
END
;*******************************************
;* ST_CONVEYORB
;*******************************************
State=ST_CONVEYORB
  TEST ConveyorOut = ST_READY_ROBOT
	AND moveBag = 0
		SET moveBag 1
	ENDTEST
	TEST parent = ST_RUN
	AND Pallebane6 = ST_READY_ROBOT
	AND userPalletOut = 0
		TEST conveyorB_palletB.state = ST_LOADED
			TEST loaded = 0
			AND palletB_home.state < ST_INACTIVE
			AND palletB_conveyorB.state < ST_INACTIVE
    		SETFRAME fromFrame toFrame
  	  	SETFRAME toFrame conveyorB
				SET palletB_conveyorB.mode conveyorB_palletB.mode
				LOAD palletB_conveyorB fromFrame toFrame
			  ;*******************************************
				LOAD palletB_home fromFrame home
				SET loaded 1
      ENDTEST
			TEST loaded = 1
      AND moveBag = 3
        TEST cBItem >= wBItemMinusTwo
        AND cBItem < wBItem
          SET nextBagCount twoLastBagCount
        ELSE
          SET nextBagCount bagsPerMove
        ENDTEST
        SET moveBag 4
				SET delaystop 1
				PRINT conveyorB_palletB
				EXEC conveyorB_palletB
				SETSTATE ST_CONVEYORB_PALLETB
			ENDTEST
		ENDTEST
	ELSE
	  TEST userPalletOut = 1
	  OR parent != ST_RUN
	  OR Pallebane6 != ST_READY_ROBOT
      TEST conveyorB_home.state = ST_LOADED
		  AND ConveyorOut != ST_SEND
			  TEST home_conveyorB.state < ST_INACTIVE 
				  ;*******************************************
  				SETFRAME toFrame conveyorB
			  	LOAD home_conveyorB home toFrame 
				  ;*******************************************
				  ; tool doesn't have to be ST_GO before exec because
				  ; opendelay is hardcoded=1s for path 43 in trio.
				  SET delaystop 1
				  PRINT conveyorB_home 
				  EXEC conveyorB_home 
				  SETSTATE ST_CONVEYORB_HOME
			  ENDTEST
			ENDTEST
		ENDTEST
	ENDTEST
END

;*******************************************
;* ST_PALLETB
;*******************************************
State=ST_PALLETB
  TEST parent = ST_RUN
	AND Pallebane6 = ST_READY_ROBOT
	AND cBItem < wBItem 
	AND userPalletOut = 0
	AND roboMessageCached = 0
		TEST palletB_conveyorB.state = ST_LOADED
			TEST loaded != 1
		  AND conveyorB_palletB.state < ST_INACTIVE
			AND conveyorB_home.state < ST_INACTIVE 
				INLINE 402inlineLoadConveyorBp.statemachine
;				INLINE 402inlineLoadConveyorB.statemachine
				SET loaded 1
				;*******************************************
			ENDTEST
			TEST loaded = 1
				SET delaystop 1
				TEST autorobotspeed = 1 
				AND ConveyorOut = ST_READY_ROBOT
					CALC rbspeed = rbspeed + posspstep
					INLINE inlineRobotSpeed.statemachine
				ENDTEST
				PRINT palletB_conveyorB
				EXEC palletB_conveyorB
		    SETSTATE ST_PALLETB_CONVEYORB
		  ENDTEST
		ENDTEST
	ELSE
		;conditions that send us HOME
		TEST TimeInPalletB = 1
		OR parent != ST_RUN
		OR cBItem >= wBItem 
		OR userPalletOut = 1
		OR roboMessageCached != 0
			TEST palletB_home.state = ST_LOADED
				TEST loaded != 2
				AND home_conveyorB.state < ST_INACTIVE
					;*******************************************
					SETFRAME toFrame conveyorB
					LOAD home_conveyorB home toFrame 
					;*******************************************
					SET loaded 2
				ENDTEST
				TEST loaded = 2
				  SET delaystop 1
          PRINT palletB_home 
          EXEC palletB_home 
					SETSTATE ST_PALLETB_HOME
				ENDTEST
			ENDTEST
		ENDTEST
	ENDTEST
END
;*******************************************
;*
;*       P A T H - S T A T E S
;*
;*******************************************
;*******************************************
;* ST_HOME_HOME
;*******************************************
State=ST_HOME_HOME
  TEST home_home.state = ST_EXECUTING
	  SET griber 0
  ELSE
    TEST home_home.state = ST_FINISHED
			SET loaded 0
      SET delaystop 0
      SETSTATE ST_HOME
    ELSE
      TEST home_home.state = ST_ERROR
        TEST parent = ST_IDLE
          SETSTATE ST_IDLE
        ENDTEST 
      ENDTEST
    ENDTEST
  ENDTEST
END
;*******************************************
;* ST_HOME_CONVEYORB
;*******************************************
State=ST_HOME_CONVEYORB
  TEST home_conveyorB.state = ST_EXECUTING
	  SET griber 0
  ELSE
    TEST home_conveyorB.state = ST_FINISHED
			SET loaded 0
      SETSTATE ST_CONVEYORB
    ELSE
      TEST home_conveyorB.state = ST_ERROR
        TEST parent = ST_IDLE
          SETSTATE ST_IDLE
        ENDTEST 
      ENDTEST
    ENDTEST
  ENDTEST
END
;*******************************************
;* ST_CONVEYORB_HOME
;*******************************************
State=ST_CONVEYORB_HOME
  TEST conveyorB_home.state = ST_EXECUTING
	  SET griber 0
  ELSE
		TEST conveyorB_home.state = ST_FINISHED
		  SET delaystop 0
			SET loaded 0
			SETSTATE ST_HOME
		ELSE
			TEST conveyorB_home.state = ST_ERROR
				TEST parent = ST_IDLE
					SETSTATE ST_IDLE
				ENDTEST 
			ENDTEST
		ENDTEST
	ENDTEST
END
;*******************************************
;* ST_CONVEYORB_PALLETB
;*******************************************
State=ST_CONVEYORB_PALLETB
  TEST conveyorB_palletB.state = ST_EXECUTING
		;try early open
		TEST pathtype = 24
		AND axis_t > 900000
		AND axis_t < 990000
	    SET griber 1
		ENDTEST
  ELSE
    TEST conveyorB_palletB.state = ST_FINISHED
		  SET griber 1
      CALC cBItem = cBItem + 1
      CALC itemCounter = itemCounter + bagsPerMove
			SET loaded 0
			TIMEOUT TimeInPalletB ST_PALLETB
      SETSTATE ST_PALLETB
    ELSE
      TEST conveyorB_palletB.state = ST_ERROR
        TEST parent = ST_IDLE
          SETSTATE ST_IDLE
        ENDTEST 
      ENDTEST
    ENDTEST
  ENDTEST
END
;*******************************************
;* ST_PALLETB_CONVEYORB
;*******************************************
State=ST_PALLETB_CONVEYORB
  TEST palletB_conveyorB.state = ST_EXECUTING
		TEST pathtype = 44
		AND axis_t < 900000
		AND axis_t > 350000
			SET griber 0
		ENDTEST
  ELSE
    TEST palletB_conveyorB.state = ST_FINISHED
			SET loaded 0
			SET griber 0
			TEST autorobotspeed = 1 
			AND ConveyorOut != ST_READY_ROBOT
				CALC rbspeed = rbspeed - negspstep
				INLINE inlineRobotSpeed.statemachine
			ENDTEST
      SETSTATE ST_CONVEYORB
    ELSE
      TEST palletB_conveyorB.state = ST_ERROR
        TEST parent = ST_IDLE
          SETSTATE ST_IDLE
        ENDTEST 
      ENDTEST
    ENDTEST
  ENDTEST
END
;*******************************************
;* ST_PALLETB_HOME
;*******************************************
State=ST_PALLETB_HOME
  TEST palletB_home.state = ST_EXECUTING
		TEST pathtype = 25
		AND axis_t < 900000
		AND axis_t > 250000
			SET griber 0
		ENDTEST
	ELSE
    TEST palletB_home.state = ST_FINISHED
		  SET delaystop 0
			SET loaded 0
			SET griber 0
			TEST cBItem >= wBItem
				SET cBItem sBItem
				SET itemCounter 0
				SET nextpalb 1
				SET nextBagCount bagsPerMove
				SET randseed thisSeed
				INLINE inlineSeedRandom.statemachine
			ENDTEST
      SETSTATE ST_HOME
    ELSE
      TEST palletB_home.state = ST_ERROR
        TEST parent = ST_IDLE
          SETSTATE ST_IDLE
        ENDTEST 
      ENDTEST
    ENDTEST
  ENDTEST
END
