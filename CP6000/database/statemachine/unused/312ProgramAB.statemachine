STATEMACHINEVERSION 3
Name=ProgramAB
;*******************************************
;* LINK's                 
;*******************************************
Link=program Program312
Link=parent Parent
Link=robot Robot
Link=Tool
Link=ConveyorOut
Link=Pallebane6
Link=ConveyorOutA
Link=Pallebane6A
;*******************************************
;* VALUE's                
;*******************************************
linkValue=wALayer Program312
linkValue=wBLayer Program312
linkValue=wAItemsPerLayer Program312
linkValue=wBItemsPerLayer Program312
linkValue=timeInPalletB Program312
linkValue=WorkCellFirstRun firstRun WorkCell
;when roboError > 0 and restart = 1 the workcell can be restarted 
linkValue=restart RoboError 
linkValue=resetpreload Loader 
;when 2 or more path's must run as one - set delaystop = 1
;before start off first path and = 0 after last
;executer will test this value before pausing execution
linkValue=delaystop Robot
linkValue=axis_t Robot
linkValue=pathtype Robot
linkValue=casekind Program312
linkValue=nextpala Frames
linkValue=nextpalb Frames
linkValue=userPalletAOut Frames
linkValue=userPalletBOut Frames
linkValue=cAItem Frames
linkValue=cBItem Frames
linkValue=wAItem Frames
linkValue=wBItem Frames
linkValue=roboMessageCached RoboError
Value=errorCode 0
Const=sBItem 0
Const=sAItem 0
Value=leftrightA 0
Value=leftrightB 0
Value=loaded 0
Value=temp 0
Value=ftemp 0.0
Value=cAStackleft 0
Value=cAStackright 0
Value=cBStackleft 0
Value=cBStackright 0
; left = palletB1
; right = palletB0
Value=transferstate 0
;*******************************************
;* FRAME LINKVALUE's                
;*******************************************
linkValue=base Frames
linkValue=home Frames
linkValue=homeHigh Frames
linkValue=palletB0 Frames
linkValue=palletB1 Frames
linkValue=conveyorA Frames
linkValue=conveyorB Frames
linkValue=palletA0 Frames
linkValue=palletA1 Frames
;*******************************************
;* ALL EXISTING PATH TYPES
;*******************************************

Path=home_conveyorB 			     21 23
Path=home_conveyorA 			     22 23
Path=conveyorB_palletB0		     21 24
Path=conveyorB_palletB1 			 22 24
Path=conveyorA_palletA0 			 23 24 
Path=conveyorA_palletA1 			 24 24 
;Path=NettoconveyorB_palletB0  31 24
;Path=NettoconveyorB_palletB1	 32 24
;Path=NettoconveyorA_palletA0  33 24
;Path=NettoconveyorA_palletA1	 34 24
Path=palletB0_home 			       21 25 
Path=palletB1_home 			       22 25 
Path=palletA0_home 			       23 25 
Path=palletA1_home 			       24 25 
Path=palletB0_conveyorA 			 21 44 
Path=palletB0_conveyorB 			 21 44 
Path=palletB1_conveyorA 			 22 44 
Path=palletB1_conveyorB 			 22 44 
Path=palletA0_conveyorA 			 23 44 
Path=palletA0_conveyorB 			 23 44 
Path=palletA1_conveyorA 			 24 44 
Path=palletA1_conveyorB 			 24 44 
Path=home_home 			           21 16 
Path=conveyorB_home 			     21 43 
Path=conveyorA_home 			     22 43 

Value=B0normalmode 21
Value=B1normalmode 22
Value=A0normalmode 23
Value=A1normalmode 24
;*******************************************
;* ITEM's                    
;*******************************************
Item=item C11
Item=itemC11 C11
Item=itemC18 C18
Item=itemNetto Netto
Item=itemIFCO16 IFCO16
Item=itemIFCO18 IFCO18
Item=itemIFCO20 IFCO20
;*******************************************
;* PATTERN's                 
;*******************************************
;Pattern=patternB 30410Kg_80
;*******************************************
;* FRAME's
;*******************************************
Frame=fromFrame x=0.0 y=0.0 z=0.0 v=0.0 w=0.0 u=0.0 
Frame=toFrame x=0.0 y=0.0 z=0.0 v=0.0 w=0.0 u=0.0 
;*******************************************
;* TIMEOUT's                    
;*******************************************
Timeout=TimeInPalletA 2000000
Timeout=TimeInPalletB 2000000
;*******************************************
;* STATES                    
;*******************************************

State=ST_HALT
END

State=ST_TIMER
END

State=ST_ERROR
	TEST parent != ST_RUN
		SETSTATE ST_IDLE
	ENDTEST
END

State=ST_IDLE
  SET delaystop 0
  SET transferstate 0
  TEST parent = ST_RUN
		SET errorCode 0
    SETSTATE ST_RESET
  ENDTEST
END

State=ST_RESET
	SET TimeInPalletB timeInPalletB
	SET loaded 0
	SET errorCode 0
  SET transferstate 0
	;set state = ST_IDLE for alle path's and set maxidx = 0 in pathTable
	;stafet value
  TEST resetpreload = 0
    SET resetpreload 1
  ENDTEST
  TEST resetpreload = 3
    SET resetpreload 0
    TEST WorkCellFirstRun = 1
    OR restart = 0
	    SETSTATE ST_START
    ELSE
      SETSTATE ST_RESTART
    ENDTEST
  ENDTEST
END

;*******************************************
;* RESTART FROM SOMEWHERE
;*******************************************
State=ST_RESTART
	;  kun een bopt fil for hver robot
	;  en ppscripttype for hver konfiguration(tool)
  SET delaystop 0 
  SET transferstate 0
  TEST home_home.state < ST_INACTIVE
    LOAD home_home homeHigh home 
    SETSTATE ST_WAIT_HOME_HOME_LOADED
  ENDTEST
END
;*******************************************
;* START FROM SCRATCH
;*******************************************
State=ST_START
;  kun een bopt fil for hver robot
;  en ppscripttype for hver konfiguration(tool)
  SET delaystop 0
  SET transferstate 0
  TEST home_home.state < ST_INACTIVE
		SET B0normalmode 21
		SET B1normalmode 22
		SET A0normalmode 23
		SET A1normalmode 24
		TEST casekind = 1
			SETITEM item itemC11
		ELSE
			TEST casekind = 3
				SETITEM item itemC18
			ELSE
				TEST casekind = 6
					SET B0normalmode 31
					SET B1normalmode 32
					SET A0normalmode 33
					SET A1normalmode 34
					SETITEM item itemNetto
				ELSE
					TEST casekind = 8
						SETITEM item itemIFCO16
					ELSE
						TEST casekind = 9
							SETITEM item itemIFCO18
						ELSE
							TEST casekind = 10
								SETITEM item itemIFCO20
							ENDTEST
						ENDTEST
					ENDTEST
				ENDTEST
			ENDTEST
		ENDTEST
		CALC wBItem = wBLayer * wBItemsPerLayer
		CALC wAItem = wALayer * wAItemsPerLayer
    INLINE 312inlineResetStackA.statemachine
		INLINE 312inlineResetStackB.statemachine
		SET restart 1
    LOAD home_home homeHigh home 
	  SETSTATE ST_WAIT_HOME_HOME_LOADED
  ENDTEST
END
;*******************************************
;* ST_WAIT_HOME_HOME_LOADED
;*******************************************
State=ST_WAIT_HOME_HOME_LOADED
  TEST home_home.state = ST_LOADED
	  TEST home_conveyorA.state < ST_INACTIVE
	  AND home_conveyorB.state < ST_INACTIVE
			INLINE 312inlineLoadHome.statemachine
      SET delaystop 0
      EXEC home_home
      SETSTATE ST_HOME_HOME
    ENDTEST
  ENDTEST
END
;*******************************************
;*
;*       F R A M E - S T A T E S
;*
;*******************************************
;*******************************************
;* ST_HOME
;*******************************************
State=ST_HOME
  SET transferstate 0
  TEST parent = ST_RUN
	AND roboMessageCached = 0
    TEST home_conveyorB.state = ST_LOADED
		AND home_conveyorA.state = ST_LOADED
			TEST loaded = 0
      AND conveyorB_palletB0.state < ST_INACTIVE
      AND conveyorB_palletB1.state < ST_INACTIVE
      AND conveyorB_home.state < ST_INACTIVE
      AND conveyorA_palletA0.state < ST_INACTIVE
      AND conveyorA_palletA1.state < ST_INACTIVE
      AND conveyorA_home.state < ST_INACTIVE
				;*******************************************
				TEST userPalletBOut = 1
					SET userPalletBOut 0
					INLINE 312inlineResetStackB.statemachine
				ENDTEST
				TEST userPalletAOut = 1
					SET userPalletAOut 0
					INLINE 312inlineResetStackA.statemachine
				ENDTEST
				;*******************************************
			  INLINE 312inlineLoadConveyorB.statemachine
				;*******************************************
				INLINE 312inlineLoadConveyorA.statemachine
				SET loaded 1
			ENDTEST
			TEST loaded = 1
				TEST ConveyorOutA = ST_READY_ROBOT
				AND Pallebane6A = ST_READY_ROBOT
				AND Tool = ST_GO
				AND nextpalb = 0
					SET delaystop 1
					EXEC home_conveyorB 
					SETSTATE ST_HOME_CONVEYORB
				ELSE
					TEST ConveyorOut = ST_READY_ROBOT
					AND Pallebane6 = ST_READY_ROBOT
					AND Tool = ST_GO
					AND nextpala = 0
						SET delaystop 1
						EXEC home_conveyorA
						SETSTATE ST_HOME_CONVEYORA
					ENDTEST
				ENDTEST
			ENDTEST
    ENDTEST
  ELSE
		TEST roboMessageCached = 333
			SET errorCode 333
			SETSTATE ST_ERROR
		ELSE
			SETSTATE ST_IDLE
		ENDTEST
  ENDTEST
END
;*******************************************
;* ST_CONVEYORA
;*******************************************
State=ST_CONVEYORA
  SET transferstate 0
	TEST userPalletBOut = 1
		SET userPalletBOut 0
		INLINE 312inlineResetStackB.statemachine
	ENDTEST
	TEST parent = ST_RUN
	AND ConveyorOut = ST_READY_ROBOT
	AND Pallebane6 = ST_READY_ROBOT
	AND userPalletAOut = 0
		TEST leftrightA = 1
			TEST conveyorA_palletA0.state = ST_LOADED
				TEST loaded = 0
				AND palletA0_home.state < ST_INACTIVE
				AND palletA0_conveyorA.state < ST_INACTIVE
				AND palletA0_conveyorB.state < ST_INACTIVE
					INLINE 312inlineLoadPalletA0.statemachine
					SET loaded 1
				ENDTEST
				TEST loaded = 1
				AND Tool = ST_GO
					SET delaystop 1
					EXEC conveyorA_palletA0
					SETSTATE ST_CONVEYORA_PALLETA0
				ENDTEST
			ENDTEST
		ELSE
			TEST conveyorA_palletA1.state = ST_LOADED
				TEST loaded = 0
				AND palletA1_home.state < ST_INACTIVE
				AND palletA1_conveyorA.state < ST_INACTIVE
				AND palletA1_conveyorB.state < ST_INACTIVE
					INLINE 312inlineLoadPalletA1.statemachine
					;*******************************************
					SET loaded 1
				ENDTEST
				TEST loaded = 1
				AND Tool = ST_GO
					SET delaystop 1
					EXEC conveyorA_palletA1
					SETSTATE ST_CONVEYORA_PALLETA1
				ENDTEST
			ENDTEST
		ENDTEST
	ELSE
		TEST conveyorA_home.state = ST_LOADED
			TEST home_conveyorA.state < ST_INACTIVE 
			AND home_conveyorB.state < ST_INACTIVE 
				INLINE 312inlineLoadHome.statemachine
				;*******************************************
				; tool doesn't have to be ST_GO before exec because
				; opendelay is hardcoded=1s for path 43 in trio.
				EXEC conveyorA_home
				SETSTATE ST_CONVEYORA_HOME
			ENDTEST
		ENDTEST
	ENDTEST
END
;*******************************************
;* ST_CONVEYORB
;*******************************************
State=ST_CONVEYORB
  SET transferstate 0
	TEST userPalletAOut = 1
		SET userPalletAOut 0
		INLINE 312inlineResetStackA.statemachine
	ENDTEST
	TEST parent = ST_RUN
	AND ConveyorOutA = ST_READY_ROBOT
	AND Pallebane6A = ST_READY_ROBOT
	AND userPalletBOut = 0
		TEST leftrightB = 1
			TEST conveyorB_palletB0.state = ST_LOADED
				TEST loaded = 0
				AND palletB0_home.state < ST_INACTIVE
				AND palletB0_conveyorB.state < ST_INACTIVE
				AND palletB0_conveyorA.state < ST_INACTIVE
					;*****************************************
					INLINE 312inlineLoadPalletB0.statemachine
					SET loaded 1
				ENDTEST
				TEST loaded = 1
				AND Tool = ST_GO
					SET delaystop 1
					EXEC conveyorB_palletB0
					SETSTATE ST_CONVEYORB_PALLETB0
				ENDTEST
			ENDTEST
		ELSE
			TEST conveyorB_palletB1.state = ST_LOADED
				TEST loaded = 0
				AND palletB1_home.state < ST_INACTIVE
				AND palletB1_conveyorB.state < ST_INACTIVE
				AND palletB1_conveyorA.state < ST_INACTIVE
					;*******************************************
					INLINE 312inlineLoadPalletB1.statemachine
					SET loaded 1
				ENDTEST
				TEST loaded = 1
				AND Tool = ST_GO
					SET delaystop 1
					EXEC conveyorB_palletB1
					SETSTATE ST_CONVEYORB_PALLETB1
				ENDTEST
			ENDTEST
		ENDTEST
	ELSE
		TEST conveyorB_home.state = ST_LOADED
			TEST home_conveyorA.state < ST_INACTIVE 
			AND home_conveyorB.state < ST_INACTIVE 
				INLINE 312inlineLoadHome.statemachine
				;*******************************************
				; tool doesn't have to be ST_GO before exec because
				; opendelay is hardcoded=1s for path 43 in trio.
				EXEC conveyorB_home 
				SETSTATE ST_CONVEYORB_HOME
			ENDTEST
		ENDTEST
	ENDTEST
END
;*******************************************
;* ST_PALLETA0
;*******************************************
State=ST_PALLETA0
  SET transferstate 0
	TEST parent = ST_RUN
	AND ConveyorOutA = ST_READY_ROBOT
	AND Pallebane6A = ST_READY_ROBOT
	AND cBItem < wBItem 
	AND userPalletBOut = 0
	AND roboMessageCached = 0
		TEST palletA0_conveyorB.state = ST_LOADED
			TEST loaded != 1
			AND conveyorB_palletB0.state < ST_INACTIVE
			AND conveyorB_palletB1.state < ST_INACTIVE
			AND conveyorB_home.state < ST_INACTIVE
			  INLINE 312inlineLoadConveyorB.statemachine
				SET loaded 1
			ENDTEST
			TEST loaded = 1
			AND Tool = ST_GO
				SET delaystop 1
				EXEC palletA0_conveyorB
				SETSTATE ST_PALLETA0_CONVEYORB
			ENDTEST
		ENDTEST
	ELSE
		TEST parent = ST_RUN
		AND ConveyorOut = ST_READY_ROBOT
		AND Pallebane6 = ST_READY_ROBOT
		AND cAItem < wAItem
		AND userPalletAOut = 0
		AND roboMessageCached = 0
			TEST palletA0_conveyorA.state = ST_LOADED
				TEST loaded != 2
				AND conveyorA_palletA0.state < ST_INACTIVE
				AND conveyorA_palletA1.state < ST_INACTIVE
				AND conveyorA_home.state < ST_INACTIVE 
					INLINE 312inlineLoadConveyorA.statemachine
					SET loaded 2
					;*******************************************
				ENDTEST
				TEST loaded = 2
				AND Tool = ST_GO
					SET delaystop 1
					EXEC palletA0_conveyorA
					SETSTATE ST_PALLETA0_CONVEYORA
				ENDTEST
			ENDTEST
		ELSE
			TEST TimeInPalletA = 1
			OR parent != ST_RUN
			OR cAItem >= wAItem 
			OR userPalletAOut = 1
			OR roboMessageCached != 0
				TEST palletA0_home.state = ST_LOADED
					TEST loaded != 3
					AND home_conveyorA.state < ST_INACTIVE
					AND home_conveyorB.state < ST_INACTIVE
						INLINE 312inlineLoadHome.statemachine
						;*******************************************
						SET loaded 3
					ENDTEST
					TEST loaded = 3
					AND Tool = ST_GO
						EXEC palletA0_home 
						SETSTATE ST_PALLETA0_HOME
					ENDTEST
				ENDTEST
			ENDTEST
		ENDTEST
	ENDTEST
END
;*******************************************
;* ST_PALLETA1
;*******************************************
State=ST_PALLETA1
  SET transferstate 0
	TEST parent = ST_RUN
	AND ConveyorOutA = ST_READY_ROBOT
	AND Pallebane6A = ST_READY_ROBOT
	AND cBItem < wBItem
	AND userPalletBOut = 0
	AND roboMessageCached = 0
		TEST palletA1_conveyorB.state = ST_LOADED
			TEST loaded != 1
			AND conveyorB_palletB0.state < ST_INACTIVE
			AND conveyorB_palletB1.state < ST_INACTIVE
			AND conveyorB_home.state < ST_INACTIVE
			  INLINE 312inlineLoadConveyorB.statemachine
				SET loaded 1
			ENDTEST
			TEST loaded = 1
			AND Tool = ST_GO
				SET delaystop 1
				EXEC palletA1_conveyorB
				SETSTATE ST_PALLETA1_CONVEYORB
			ENDTEST
		ENDTEST
	ELSE
		TEST parent = ST_RUN
		AND ConveyorOut = ST_READY_ROBOT
		AND Pallebane6 = ST_READY_ROBOT
		AND cAItem < wAItem
		AND userPalletAOut = 0
		AND roboMessageCached = 0
			TEST palletA1_conveyorA.state = ST_LOADED
				TEST loaded != 2
				AND conveyorA_palletA0.state < ST_INACTIVE
				AND conveyorA_palletA1.state < ST_INACTIVE
				AND conveyorA_home.state < ST_INACTIVE 
	  			INLINE 312inlineLoadConveyorA.statemachine
					SET loaded 2
				ENDTEST
				TEST loaded = 2
				AND Tool = ST_GO
					SET delaystop 1
					EXEC palletA1_conveyorA
					SETSTATE ST_PALLETA1_CONVEYORA
				ENDTEST
			ENDTEST
		ELSE
			TEST TimeInPalletA = 1
			OR parent != ST_RUN
			OR cAItem >= wAItem 
			OR userPalletAOut = 1
			OR roboMessageCached != 0
				TEST palletA1_home.state = ST_LOADED
					TEST loaded != 3
					AND home_conveyorA.state < ST_INACTIVE
					AND home_conveyorB.state < ST_INACTIVE
						;*******************************************
						INLINE 312inlineLoadHome.statemachine
						SET loaded 3
						;*******************************************
					ENDTEST
					TEST loaded = 3
					AND Tool = ST_GO
						EXEC palletA1_home 
						SETSTATE ST_PALLETA1_HOME
					ENDTEST
				ENDTEST
			ENDTEST
		ENDTEST
	ENDTEST
END
;*******************************************
;* ST_PALLETB0
;*******************************************
State=ST_PALLETB0
  SET transferstate 0
  TEST parent = ST_RUN
	AND ConveyorOut = ST_READY_ROBOT
	AND Pallebane6 = ST_READY_ROBOT
	AND cAItem < wAItem 
	AND userPalletAOut = 0
	AND roboMessageCached = 0
		TEST palletB0_conveyorA.state = ST_LOADED
			TEST loaded != 1
		  AND conveyorA_palletA0.state < ST_INACTIVE
		  AND conveyorA_palletA1.state < ST_INACTIVE
			AND conveyorA_home.state < ST_INACTIVE 
				INLINE 312inlineLoadConveyorA.statemachine
				SET loaded 1
			ENDTEST
			TEST loaded = 1
			AND Tool = ST_GO
				SET delaystop 1
		    EXEC palletB0_conveyorA
		    SETSTATE ST_PALLETB0_CONVEYORA
		  ENDTEST
		ENDTEST
	ELSE
		TEST parent = ST_RUN
		AND ConveyorOutA = ST_READY_ROBOT
		AND Pallebane6A = ST_READY_ROBOT
		AND cBItem < wBItem 
		AND userPalletBOut = 0
		AND roboMessageCached = 0
			TEST palletB0_conveyorB.state = ST_LOADED
				TEST loaded != 2
				AND conveyorB_palletB0.state < ST_INACTIVE
				AND conveyorB_palletB1.state < ST_INACTIVE
				AND conveyorB_home.state < ST_INACTIVE 
					INLINE 312inlineLoadConveyorB.statemachine
					SET loaded 2
				ENDTEST
				TEST loaded = 2
				AND Tool = ST_GO
					SET delaystop 1
					EXEC palletB0_conveyorB
					SETSTATE ST_PALLETB0_CONVEYORB
				ENDTEST
			ENDTEST
		ELSE
			TEST TimeInPalletB = 1
			OR parent != ST_RUN
			OR cBItem >= wBItem 
			OR userPalletBOut = 1
			OR roboMessageCached != 0
				TEST palletB0_home.state = ST_LOADED
					TEST loaded != 3
					AND home_conveyorA.state < ST_INACTIVE
					AND home_conveyorB.state < ST_INACTIVE
						INLINE 312inlineLoadHome.statemachine
						SET loaded 3
					ENDTEST
					TEST loaded = 3
					AND Tool = ST_GO
						EXEC palletB0_home 
						SETSTATE ST_PALLETB0_HOME
					ENDTEST
				ENDTEST
			ENDTEST
		ENDTEST
	ENDTEST
END
;*******************************************
;* ST_PALLETB1
;*******************************************
State=ST_PALLETB1
  SET transferstate 0
  TEST parent = ST_RUN
	AND ConveyorOut = ST_READY_ROBOT
	AND Pallebane6 = ST_READY_ROBOT
	AND cAItem < wAItem
	AND userPalletAOut = 0
	AND roboMessageCached = 0
    TEST palletB1_conveyorA.state = ST_LOADED
			TEST loaded != 1
			AND conveyorA_palletA0.state < ST_INACTIVE
			AND conveyorA_palletA1.state < ST_INACTIVE
			AND conveyorA_home.state < ST_INACTIVE 
			  INLINE 312inlineLoadConveyorA.statemachine
				SET loaded 1
			ENDTEST
			TEST loaded = 1
			AND Tool = ST_GO
        SET delaystop 1
        EXEC palletB1_conveyorA
        SETSTATE ST_PALLETB1_CONVEYORA
      ENDTEST
    ENDTEST
  ELSE
		TEST parent = ST_RUN
		AND ConveyorOutA = ST_READY_ROBOT
		AND Pallebane6A = ST_READY_ROBOT
		AND cBItem < wBItem
		AND userPalletBOut = 0
		AND roboMessageCached = 0
			TEST palletB1_conveyorB.state = ST_LOADED
				TEST loaded != 2
				AND conveyorB_palletB0.state < ST_INACTIVE
				AND conveyorB_palletB1.state < ST_INACTIVE
				AND conveyorB_home.state < ST_INACTIVE 
					INLINE 312inlineLoadConveyorB.statemachine
					SET loaded 2
				ENDTEST
				TEST loaded = 2
				AND Tool = ST_GO
					SET delaystop 1
					EXEC palletB1_conveyorB
					SETSTATE ST_PALLETB1_CONVEYORB
				ENDTEST
			ENDTEST
		ELSE
			TEST TimeInPalletB = 1
			OR parent != ST_RUN
			OR cBItem >= wBItem 
			OR userPalletBOut = 1
			OR roboMessageCached != 0
				TEST palletB1_home.state = ST_LOADED
					TEST loaded != 3
					AND home_conveyorA.state < ST_INACTIVE
					AND home_conveyorB.state < ST_INACTIVE
						INLINE 312inlineLoadHome.statemachine
						SET loaded 3
					ENDTEST
					TEST loaded = 3
					AND Tool = ST_GO
						EXEC palletB1_home 
						SETSTATE ST_PALLETB1_HOME
					ENDTEST
				ENDTEST
			ENDTEST
		ENDTEST
	ENDTEST
END
;*******************************************
;*
;*       P A T H - S T A T E S
;*
;*******************************************
;*******************************************
;* ST_HOME_HOME
;*******************************************
State=ST_HOME_HOME
  SET transferstate 1
  TEST home_home.state = ST_EXECUTING
		;    TEST axis_t > 500000
		;     SET griber 1
		;    ENDTEST
  ELSETEST home_home.state = ST_FINISHED
		SET loaded 0
    SETSTATE ST_HOME
  ELSETEST home_home.state = ST_ERROR
  AND parent = ST_IDLE
    SETSTATE ST_IDLE
  ENDTEST 
END
;*******************************************
;* ST_HOME_CONVEYORA
;*******************************************
State=ST_HOME_CONVEYORA
  SET transferstate 1
  TEST home_conveyorA.state = ST_EXECUTING
		;    TEST axis_t > 900000
		;      SET griber 1
		;    ENDTEST
  ELSETEST home_conveyorA.state = ST_FINISHED
		SET loaded 0
    SETSTATE ST_CONVEYORA
  ELSETEST home_conveyorA.state = ST_ERROR
  AND parent = ST_IDLE
    SETSTATE ST_IDLE
  ENDTEST 
END
;*******************************************
;* ST_HOME_CONVEYORB
;*******************************************
State=ST_HOME_CONVEYORB
  SET transferstate 1
  TEST home_conveyorB.state = ST_EXECUTING
		;    TEST axis_t > 900000
		;      SET griber 1
		;    ENDTEST
  ELSETEST home_conveyorB.state = ST_FINISHED
		SET loaded 0
    SETSTATE ST_CONVEYORB
  ELSETEST home_conveyorB.state = ST_ERROR
  AND parent = ST_IDLE
    SETSTATE ST_IDLE
  ENDTEST 
END
;*******************************************
;* ST_CONVEYORA_HOME
;*******************************************
State=ST_CONVEYORA_HOME
  SET transferstate 1
  TEST conveyorA_home.state = ST_EXECUTING
		SET delaystop 0
		;    TEST axis_t > 900000
		;      SET griber 1
		;    ENDTEST
  ELSETEST conveyorA_home.state = ST_FINISHED
		SET loaded 0
		SETSTATE ST_HOME
	ELSETEST conveyorA_home.state = ST_ERROR
	AND parent = ST_IDLE
		SETSTATE ST_IDLE
	ENDTEST 
END
;*******************************************
;* ST_CONVEYORB_HOME
;*******************************************
State=ST_CONVEYORB_HOME
  SET transferstate 1
  TEST conveyorB_home.state = ST_EXECUTING
		SET delaystop 0
		;    TEST axis_t > 900000
		;      SET griber 1
		;    ENDTEST
  ELSETEST conveyorB_home.state = ST_FINISHED
		SET loaded 0
		SETSTATE ST_HOME
	ELSETEST conveyorB_home.state = ST_ERROR
	AND parent = ST_IDLE
		SETSTATE ST_IDLE
	ENDTEST 
END
;*******************************************
;* ST_CONVEYORA_PALLETA0
;*******************************************
State=ST_CONVEYORA_PALLETA0
  SET transferstate 1
  TEST conveyorA_palletA0.state = ST_EXECUTING
		;    TEST axis_t > 900000
		;      SET griber 1
		;    ENDTEST
  ELSETEST conveyorA_palletA0.state = ST_FINISHED
    CALC cAItem = cAItem + 1
		CALC cAStackright = cAStackright + 1
    PRINT cAItem
		SET loaded 0
		TIMEOUT TimeInPalletA ST_PALLETA0
    SETSTATE ST_PALLETA0
  ELSETEST conveyorA_palletA0.state = ST_ERROR
  AND parent = ST_IDLE
    SETSTATE ST_IDLE
  ENDTEST 
END
;*******************************************
;* ST_CONVEYORA_PALLETA1
;*******************************************
State=ST_CONVEYORA_PALLETA1
  SET transferstate 1
  TEST conveyorA_palletA1.state = ST_EXECUTING
  	;    TEST axis_t > 900000
		;      SET griber 1
		;    ENDTEST
	ELSETEST conveyorA_palletA1.state = ST_FINISHED
    CALC cAItem = cAItem + 1
		CALC cAStackleft = cAStackleft + 1
    PRINT cAItem
		SET loaded 0
		TIMEOUT TimeInPalletA ST_PALLETA1
    SETSTATE ST_PALLETA1
  ELSETEST conveyorA_palletA1.state = ST_ERROR
  AND parent = ST_IDLE
    SETSTATE ST_IDLE
  ENDTEST 
END
;*******************************************
;* ST_CONVEYORB_PALLETB0
;*******************************************
State=ST_CONVEYORB_PALLETB0
  SET transferstate 1
  TEST conveyorB_palletB0.state = ST_EXECUTING
		;    TEST axis_t > 900000
		;      SET griber 1
		;    ENDTEST
  ELSETEST conveyorB_palletB0.state = ST_FINISHED
    CALC cBItem = cBItem + 1
		CALC cBStackright = cBStackright + 1
    PRINT cBItem
		SET loaded 0
		TIMEOUT TimeInPalletB ST_PALLETB0
    SETSTATE ST_PALLETB0
  ELSETEST conveyorB_palletB0.state = ST_ERROR
  AND parent = ST_IDLE
    SETSTATE ST_IDLE
  ENDTEST
END
;*******************************************
;* ST_CONVEYORB_PALLETB1
;*******************************************
State=ST_CONVEYORB_PALLETB1
  SET transferstate 1
  TEST conveyorB_palletB1.state = ST_EXECUTING
  	;    TEST axis_t > 900000
		;      SET griber 1
		;    ENDTEST
	ELSETEST conveyorB_palletB1.state = ST_FINISHED
    CALC cBItem = cBItem + 1
		CALC cBStackleft = cBStackleft + 1
    PRINT cBItem
		SET loaded 0
		TIMEOUT TimeInPalletB ST_PALLETB1
    SETSTATE ST_PALLETB1
  ELSETEST conveyorB_palletB1.state = ST_ERROR
  AND parent = ST_IDLE
    SETSTATE ST_IDLE
  ENDTEST 
END
;*******************************************
;* ST_PALLETA0_CONVEYORA
;*******************************************
State=ST_PALLETA0_CONVEYORA
  SET transferstate 1
  TEST palletA0_conveyorA.state = ST_EXECUTING
		;    TEST axis_t > 900000
		;      SET griber 1
		;    ENDTEST
  ELSETEST palletA0_conveyorA.state = ST_FINISHED
		SET loaded 0
    SETSTATE ST_CONVEYORA
  ELSETEST palletA0_conveyorA.state = ST_ERROR
  AND parent = ST_IDLE
    SETSTATE ST_IDLE
  ENDTEST 
END
;*******************************************
;* ST_PALLETA1_CONVEYORA
;*******************************************
State=ST_PALLETA1_CONVEYORA
  SET transferstate 1
  TEST palletA1_conveyorA.state = ST_EXECUTING
		;    TEST axis_t > 900000
		;      SET griber 1
		;    ENDTEST
  ELSETEST palletA1_conveyorA.state = ST_FINISHED
		SET loaded 0
    SETSTATE ST_CONVEYORA
  ELSETEST palletA1_conveyorA.state = ST_ERROR
  AND parent = ST_IDLE
    SETSTATE ST_IDLE
  ENDTEST 
END
;*******************************************
;* ST_PALLETA0_CONVEYORB
;*******************************************
State=ST_PALLETA0_CONVEYORB
  SET transferstate 1
  TEST palletA0_conveyorB.state = ST_EXECUTING
		;    TEST axis_t > 900000
		;      SET griber 1
		;    ENDTEST
  ELSETEST palletA0_conveyorB.state = ST_FINISHED
		TEST cAItem >= wAItem
			INLINE 312inlineResetStackA.statemachine
		ENDTEST
		SET loaded 0
    SETSTATE ST_CONVEYORB
  ELSETEST palletA0_conveyorB.state = ST_ERROR
  AND parent = ST_IDLE
    SETSTATE ST_IDLE
  ENDTEST 
END
;*******************************************
;* ST_PALLETA1_CONVEYORB
;*******************************************
State=ST_PALLETA1_CONVEYORB
  SET transferstate 1
  TEST palletA1_conveyorB.state = ST_EXECUTING
		;    TEST axis_t > 900000
		;      SET griber 1
		;    ENDTEST
  ELSETEST palletA1_conveyorB.state = ST_FINISHED
		TEST cAItem >= wAItem
			INLINE 312inlineResetStackA.statemachine
		ENDTEST
		SET loaded 0
    SETSTATE ST_CONVEYORB
  ELSETEST palletA1_conveyorB.state = ST_ERROR
  AND parent = ST_IDLE
    SETSTATE ST_IDLE
  ENDTEST 
END
;*******************************************
;* ST_PALLETA0_HOME
;*******************************************
State=ST_PALLETA0_HOME
  SET transferstate 1
  TEST palletA0_home.state = ST_EXECUTING
		SET delaystop 0		
  ELSETEST palletA0_home.state = ST_FINISHED
		TEST cAItem >= wAItem
			INLINE 312inlineResetStackA.statemachine
		ENDTEST
		SET loaded 0
    SETSTATE ST_HOME
  ELSETEST palletA0_home.state = ST_ERROR
  AND parent = ST_IDLE
    SETSTATE ST_IDLE
  ENDTEST 
END
;*******************************************
;* ST_PALLETA1_HOME
;*******************************************
State=ST_PALLETA1_HOME
  SET transferstate 1
  TEST palletA1_home.state = ST_EXECUTING
		SET delaystop 0
  ELSETEST palletA1_home.state = ST_FINISHED
		TEST cAItem >= wAItem
			INLINE 312inlineResetStackA.statemachine
		ENDTEST
		SET loaded 0
    SETSTATE ST_HOME
  ELSETEST palletA1_home.state = ST_ERROR
  AND parent = ST_IDLE
    SETSTATE ST_IDLE
  ENDTEST 
END
;*******************************************
;* ST_PALLETB0_CONVEYORB
;*******************************************
State=ST_PALLETB0_CONVEYORB
  SET transferstate 1
  TEST palletB0_conveyorB.state = ST_EXECUTING
		;    TEST axis_t > 900000
		;      SET griber 1
		;    ENDTEST
  ELSETEST palletB0_conveyorB.state = ST_FINISHED
		SET loaded 0
    SETSTATE ST_CONVEYORB
  ELSETEST palletB0_conveyorB.state = ST_ERROR
	AND parent = ST_IDLE
    SETSTATE ST_IDLE
  ENDTEST 
END
;*******************************************
;* ST_PALLETB1_CONVEYORB
;*******************************************
State=ST_PALLETB1_CONVEYORB
  SET transferstate 1
  TEST palletB1_conveyorB.state = ST_EXECUTING
		;    TEST axis_t > 900000
		;      SET griber 1
		;    ENDTEST
  ELSETEST palletB1_conveyorB.state = ST_FINISHED
		SET loaded 0
    SETSTATE ST_CONVEYORB
  ELSETEST palletB1_conveyorB.state = ST_ERROR
  AND parent = ST_IDLE
    SETSTATE ST_IDLE
  ENDTEST 
END
;*******************************************
;* ST_PALLETB0_CONVEYORA
;*******************************************
State=ST_PALLETB0_CONVEYORA
  SET transferstate 1
  TEST palletB0_conveyorA.state = ST_EXECUTING
		;    TEST axis_t > 900000
		;      SET griber 1
		;    ENDTEST
  ELSETEST palletB0_conveyorA.state = ST_FINISHED
		TEST cBItem >= wBItem
			INLINE 312inlineResetStackB.statemachine
		ENDTEST
		SET loaded 0
    SETSTATE ST_CONVEYORA
  ELSETEST palletB0_conveyorA.state = ST_ERROR
  AND parent = ST_IDLE
    SETSTATE ST_IDLE
  ENDTEST 
END
;*******************************************
;* ST_PALLETB1_CONVEYORA
;*******************************************
State=ST_PALLETB1_CONVEYORA
  SET transferstate 1
  TEST palletB1_conveyorA.state = ST_EXECUTING
		;    TEST axis_t > 900000
		;      SET griber 1
		;    ENDTEST
  ELSETEST palletB1_conveyorA.state = ST_FINISHED
		TEST cBItem >= wBItem
			INLINE 312inlineResetStackB.statemachine
		ENDTEST
		SET loaded 0
    SETSTATE ST_CONVEYORA
  ELSETEST palletB1_conveyorA.state = ST_ERROR
  AND parent = ST_IDLE
    SETSTATE ST_IDLE
  ENDTEST 
END
;*******************************************
;* ST_PALLETB0_HOME
;*******************************************
State=ST_PALLETB0_HOME
  SET transferstate 1
  TEST palletB0_home.state = ST_EXECUTING
		SET delaystop 0		
  ELSETEST palletB0_home.state = ST_FINISHED
		TEST cBItem >= wBItem
			INLINE 312inlineResetStackB.statemachine
		ENDTEST
		SET loaded 0
    SETSTATE ST_HOME
  ELSETEST palletB0_home.state = ST_ERROR
  AND parent = ST_IDLE
    SETSTATE ST_IDLE
  ENDTEST 
END
;*******************************************
;* ST_PALLETB1_HOME
;*******************************************
State=ST_PALLETB1_HOME
  SET transferstate 1
  TEST palletB1_home.state = ST_EXECUTING
		SET delaystop 0
  ELSETEST palletB1_home.state = ST_FINISHED
		TEST cBItem >= wBItem
			INLINE 312inlineResetStackB.statemachine
		ENDTEST
		SET loaded 0
    SETSTATE ST_HOME
  ELSETEST palletB1_home.state = ST_ERROR
  AND parent = ST_IDLE
    SETSTATE ST_IDLE
  ENDTEST 
END
