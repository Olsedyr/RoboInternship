STATEMACHINEVERSION 3
Name=ProductCount
Link=Skubber LangBufferSkub
Link=CamGenSkub ServoSkub
Link=parent Parent
Link=foto1 Product1Foto1
Link=foto2 Product1Foto2
Link=foto3 Product2Foto2
Link=foto4 Product2Foto1
Link=ProductConveyors 
Value=errorCode 0
linkValue=foto1test test foto1
linkValue=foto2test test foto2
linkValue=foto3test test foto3
linkValue=foto4test test foto4
linkValue=curpm CamGenSkub
linkValue=curppp PushPattern
linkValue=productsfromleft Program
linkValue=productsfromright Program
linkValue=firstRun WorkCell
Value=numofproducts 0
Value=prenumofproducts 0
Value=oldppp 0
Value=totcount 0
Value=lowcount 0
Value=pushtotcount 0
Const=freepmstay 350
Const=freepmforward 200
Timeout=TimeStartUp 1500000

State=ST_TIMER
END

State=ST_HALT
END

State=ST_IDLE
	TEST parent = ST_RESET
		SETSTATE ST_RESET
	ENDTEST
END

State=ST_RESET
	SET errorCode 0
	SET numofproducts 0
	SET totcount 0
	SET lowcount 0
	SET pushtotcount 0
	TEST firstRun = 1		
		TIMEOUT TimeStartUp ST_STARTUP
		SETSTATE ST_STARTUP
	ELSE
		SETSTATE ST_RUN1
	ENDTEST
END

State=ST_STARTUP
	TEST TimeStartUp = 1
		TEST productsfromleft = 1
			TEST foto2test = 0
			OR foto3test = 0
			OR foto4test = 0
				SET errorCode 1055
				SETSTATE ST_IDLE
			ENDTEST
			SET numofproducts 0
			SET totcount 0
			SET pushtotcount 0
		  SET prenumofproducts numofproducts
		ELSE
			TEST productsfromright = 1
				TEST foto2test = 0
				OR foto3test = 0
				OR foto1test = 0
					SET errorCode 1055
					SETSTATE ST_IDLE
				ENDTEST
				SET numofproducts 0
				SET totcount 0
				SET pushtotcount 0
				SET prenumofproducts numofproducts
			ENDTEST
		ENDTEST
		SET oldppp curppp
		SETSTATE ST_RUN1
	ENDTEST
END

State=ST_RUN1
	TEST foto4 = ST_HIGH
	AND productsfromleft = 1
		SET oldppp curppp
		CALC numofproducts = numofproducts + 1
		SET prenumofproducts numofproducts
		CALC totcount = pushtotcount + numofproducts
		CALC lowcount = lowcount + 1
	ENDTEST
	TEST foto1 = ST_HIGH
	AND productsfromright = 1
		SET oldppp curppp
		CALC numofproducts = numofproducts + 1
		SET prenumofproducts numofproducts
		CALC totcount = pushtotcount + numofproducts
		CALC lowcount = lowcount + 1
	ENDTEST
	TEST foto4 = ST_LOW
	AND productsfromleft = 1
		CALC prenumofproducts = numofproducts + 1
	ENDTEST
	TEST foto1 = ST_LOW
	AND productsfromright = 1
		CALC prenumofproducts = numofproducts + 1
	ENDTEST
	TEST Skubber = ST_FORWARD
		TEST curpm > freepmforward
			CALC numofproducts = numofproducts - oldppp
			CALC prenumofproducts = prenumofproducts - oldppp
			CALC pushtotcount = pushtotcount + oldppp
			CALC totcount = pushtotcount + numofproducts
			SETSTATE ST_RUN2
		ENDTEST
	ELSE
		TEST Skubber = ST_FORWARDSTAY
			TEST curpm > freepmstay
				CALC numofproducts = numofproducts - oldppp
				CALC prenumofproducts = prenumofproducts - oldppp
				CALC pushtotcount = pushtotcount + oldppp
				CALC totcount = pushtotcount + numofproducts
				SETSTATE ST_RUN2
			ENDTEST	
		ENDTEST
	ENDTEST
	TEST firstRun = 1
	AND parent = ST_RESET
		TIMEOUT TimeStartUp ST_STARTUP
		SETSTATE ST_STARTUP
	ENDTEST
END

State=ST_RUN2
	TEST foto4 = ST_HIGH
	AND productsfromleft = 1
		SET oldppp curppp
		CALC numofproducts = numofproducts + 1
		SET prenumofproducts numofproducts
		CALC totcount = pushtotcount + numofproducts
		CALC lowcount = lowcount + 1
	ENDTEST
	TEST foto1 = ST_HIGH
	AND productsfromright = 1
		SET oldppp curppp
		CALC numofproducts = numofproducts + 1
		SET prenumofproducts numofproducts
		CALC totcount = pushtotcount + numofproducts
		CALC lowcount = lowcount + 1
	ENDTEST
	TEST foto4 = ST_LOW
	AND productsfromleft = 1
		CALC prenumofproducts = numofproducts + 1
	ENDTEST
	TEST foto1 = ST_LOW
	AND productsfromright = 1
		CALC prenumofproducts = numofproducts + 1
	ENDTEST
	TEST Skubber != ST_FORWARD
	AND Skubber != ST_FORWARDSTAY
		SETSTATE ST_RUN1
	ENDTEST
	TEST firstRun = 1
	AND parent = ST_RESET
		TIMEOUT TimeStartUp ST_STARTUP
		SETSTATE ST_STARTUP
	ENDTEST
END
