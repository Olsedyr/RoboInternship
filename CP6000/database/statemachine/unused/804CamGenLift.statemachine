STATEMACHINEVERSION 3
Name=CamGenLift
Link=PID PIDLift
Link=Master KasseStativ
Link=parent Parent
linkValue=encoder PID
linkValue=maxheight PID
linkValue=minheight PID
linkValue=poserr PID 
linkValue=casekind Program804
;linkValue=liftMilliTime Program
linkValue=firstRun WorkCell
; 1024*gearudveksling/(eff_rad*2*pi)
; eks: 1024*10.3/(40*2*pi)
Const=tickspermm 41.965975394
; All posXX in mm.
Const=posHome 2.0000
;Const=posSend 3000
;Const=posHoldNetto 5000 
;Const=posReleaseNetto 5200
;Const=posHoldOther 5300
;Const=posReleaseOther 5400
;todo: find posTop
Const=posTop 790.0000
Const=posSend 285.00
Const=posStopFree 100.00
Const=posNettoMinFree 500.00
Const=nettoStabelmy 50.0000
Const=posTestBegin 150.0000
Const=posTestEnd 300.0000
Item=item Netto
Item=itemC11 C11
Item=itemC18 C18
Item=itemNetto Netto
Item=itemIFCO16 IFCO16
Item=itemIFCO18 IFCO18
Item=itemIFCO20 IFCO20
Const=testmode 0
Value=teststate 0
Timeout=TimeTest 5000000
Const=tMilli 8000
Value=posf 0.0
Value=stopFree 0
;Const=posReceive 2000
;Const=posHoldNetto 5000 
;Const=posReleaseNetto 5200
;Const=posHoldOther 5300
;Const=posReleaseOther 5400
;Const=posFree 2400
Value=beginpos 0.0
Value=endpos 0.0
Value=beginspeed 0.0
Value=endspeed 0.0
Value=tTime 2000000
Value=setpoint 0
Value=setspeed 0
Value=ticksroundhalf 0
Value=ticksroundquart 0
Value=xtot 0.0
Value=curpm 0.0
Value=curpos 0.0
Value=curt 0
Value=temp 0
Value=ga 0.0
Value=gb 0.0
Value=gc 0.0
Value=gd 0.0
Value=tcpm 0.0
Value=millitot 0.0
Value=goIdle 0
Timeout=ttot 5000000
Timeout=TimeWaitIdle 1000000

; casekind = 0  -> none
; casekind = 1  -> C11
; casekind = 2  -> C14
; casekind = 3  -> C18
; casekind = 4  -> hybschA
; casekind = 5  -> hybschB
; casekind = 6  -> Netto
; casekind = 7  -> EPS610
; casekind = 8  -> IFCO16
; casekind = 9  -> IFCO18
; casekind = 10 -> IFCO20

State=ST_TIMER
END

State=ST_HALT
END

State=ST_IDLE
	TEST parent = ST_RESET
		SETSTATE ST_RESET
	ENDTEST
END

State=ST_RESET
  SET goIdle 0
	TEST firstRun = 1
		TEST casekind = 1
			SETITEM item itemC11
		ELSE
			TEST casekind = 3
				SETITEM item itemC18
			ELSE
				TEST casekind = 6
					SETITEM item itemNetto
				ELSE
					TEST casekind = 8
						SETITEM item itemIFCO16
					ELSE
						TEST casekind = 9
							SETITEM item itemIFCO18
						ELSE
							TEST casekind = 10
								SETITEM item itemIFCO20
							ENDTEST
						ENDTEST
					ENDTEST
				ENDTEST
			ENDTEST
		ENDTEST
	ENDTEST
  SET setpoint posHome
  TEST casekind = 6
  	CALC posf = posTop - item.my
    CALC posf = posf - nettoStabelmy
	  CALC posf = posf - posStopFree
	  CALC posf = posf * tickspermm
  ELSE
	  CALC posf = posTop - item.my
	  CALC posf = posf - item.dy
	  CALC posf = posf - posStopFree
	  CALC posf = posf * tickspermm
  ENDTEST
  SETSTATE ST_NOCHOOSETRACK
END

State=ST_NOCHOOSETRACK
	TEST PID = ST_RUN
		CALC setpoint = encoder + poserr
		SETSTATE ST_CHOOSETRACK
	ENDTEST
END

State=ST_CHOOSETRACK
	SET beginspeed 0
	SET endspeed 0
  TEST PID = ST_RUN
    TEST Master = ST_WAIT_RECEIVE_POS
			SET beginpos setpoint
      SET endpos posHome
		  SETSTATE ST_START
    ELSE
      TEST Master = ST_WAIT_SEND_POS
			  SET beginpos setpoint
        SET endpos posSend
		    SETSTATE ST_START
      ELSE
        TEST Master = ST_WAIT_HOLD_POS
				  SET beginpos setpoint
				  TEST casekind = 6
            ;netto
            CALC endpos = posTop - item.my
            CALC endpos = endpos - nettoStabelmy
				  ELSE
					  CALC endpos = posTop - item.my
					  CALC endpos = endpos - item.dy
				  ENDTEST
          SETSTATE ST_START
        ELSE
          TEST Master = ST_WAIT_RELEASE_POS
				    SET beginpos setpoint
            CALC endpos = posTop - item.my
            SETSTATE ST_START
          ELSE
            ;send -> release -> hold -> send -> ..
            ;netto
            TEST testmode = 1
              SET beginpos setpoint
					    TEST teststate = 0
						    SET teststate 1
						    SET endpos posSend
						    TIMEOUT TimeTest ST_START
						    SETSTATE ST_TIMER
					    ELSE
						    TEST teststate = 1
							    SET teststate 2
                  CALC endpos = posTop - item.my
							    TIMEOUT TimeTest ST_START
							    SETSTATE ST_TIMER
					      ELSE
						      TEST teststate = 2
							      SET teststate 0
                    CALC endpos = posTop - item.my
                    CALC endpos = endpos - nettoStabelmy
							      TIMEOUT TimeTest ST_START
							      SETSTATE ST_TIMER
						      ENDTEST
						    ENDTEST
					    ENDTEST
				    ENDTEST
          ENDTEST
        ENDTEST
			ENDTEST
		ENDTEST
		CALC endpos = endpos * tickspermm
	ELSE
		SET setspeed 0
		SETSTATE ST_NOCHOOSETRACK
  ENDTEST
  TEST Master = ST_IDLE
  AND testmode = 0
;		SET beginpos setpoint
;		TEST casekind = 6
;      CALC endpos = posTop - item.my
;      CALC endpos = endpos - nettoStabelmy
;		ELSE
;			CALC endpos = posTop - item.my
;			CALC endpos = endpos - item.dy
;		ENDTEST
;		CALC endpos = endpos * tickspermm
;    SET goIdle 1
;		SETSTATE ST_START
		TIMEOUT TimeWaitIdle ST_IDLE
		SETSTATE ST_TIMER
  ENDTEST
	CALC tTime = endpos - beginpos
	TEST tTime < 0
		CALC tTime = tTime * -1
	ENDTEST
	CALC tTime = tTime * 1000
	CALC temp = maxheight - minheight
	CALC tTime = tTime / temp
	; tMilli = 2500 -> 2.5 s for hele bevægelsen
	CALC tTime = tTime * tMilli
	SET ttot tTime
	TEST encoder < posf
		SET stopFree 1
	ELSE
		SET stopFree 0
	ENDTEST
END

State=ST_STOP
  SET curpm 1000.0
  SET setpoint endpos
	SET setspeed 0
  SETSTATE ST_CHOOSETRACK
	TEST Master = ST_IDLE
	AND goIdle = 1
    SET goIdle 0
		TIMEOUT TimeWaitIdle ST_IDLE
		SETSTATE ST_TIMER
  ENDTEST
	TEST encoder < posf
		SET stopFree 1
	ELSE
		SET stopFree 0
	ENDTEST
END

State=ST_START
  SET setpoint beginpos
	SET setspeed 0
  CALC xtot = endpos - beginpos
  SET curpm 0.0
  TEST xtot < 100.0
  AND xtot > -100.0
		SET setpoint endpos
	  SETSTATE ST_STOP
  ELSE
		TIMEOUT ttot ST_RUN
		SETSTATE ST_RUN
  ENDTEST
END

; Profile that accelerates more in beginning
State=ST_RUN
  SET curt ttot
  CALC curt = ttot - curt
	CALC millitot = ttot / 1000.0
	CALC curpm = curt / millitot
	CALC curpos = 2000.0 * beginpos
	CALC tcpm = curpm - 1000.0
	CALC ga = tcpm * tcpm
	CALC gb = 500.0 + curpm
	CALC ga = ga * gb
	CALC curpos = curpos * ga
	CALC ga = curpm - 1500.0
  CALC ga = ga * curpm
	CALC ga = ga * endpos
	CALC ga = ga * -2000.0
	CALC gb = tcpm * millitot
	CALC gc = tcpm * beginspeed
	CALC gd = curpm * endspeed
	CALC gc = gc + gd
	CALC gb = gb * gc
	CALC ga = ga + gb
	CALC ga = ga * curpm
	CALC curpos = curpos + ga
	CALC curpos = curpos / 1000000000000.0
	SET setpoint curpos
	; ved samplerate på ca. 126 Hz
  TEST ttot < 3800
    SETSTATE ST_STOP
  ENDTEST
	TEST encoder < posf
		SET stopFree 1
	ELSE
		SET stopFree 0
	ENDTEST
END
