STATEMACHINEVERSION 3
Name=WorkCell
Link=Emergency
Link=ContinueKnap
Link=ErrorCode
; Statemachines with output, that should be tested for ST_IDLE
; find them with 'grep -l "Output=" 304*.statemachine'
linkValue=newprogram Program324
Value=errorCode 0
Value=firstRun 0
Timeout=timeBeforeRunning 3000000
Timeout=timeBeforePausing 2000000
linkValue=delaystop Robot 
linkValue=moving Robot

State=ST_HALT
END

State=ST_IDLE
  TEST ContinueKnap = ST_HIGH
    TIMEOUT timeBeforeRunning ST_STARTING
    SETSTATE ST_STARTING
  ENDTEST
END

State=ST_STARTING
  SET firstRun 1
	TEST timeBeforeRunning = 1
		SETSTATE ST_RUNNING
	ENDTEST
	TEST Emergency = ST_POWEROFF
		SET errorCode 203
		SETSTATE ST_ERROR
	ENDTEST
END

State=ST_RESTARTING
  SET firstRun 0
	TEST timeBeforeRunning = 1
		SETSTATE ST_RUNNING
	ENDTEST
	TEST Emergency = ST_POWEROFF
		SET errorCode 203
		SETSTATE ST_ERROR
	ENDTEST
END

State=ST_RUNNING
  TEST ContinueKnap = ST_HIGH
;  OR button1Pressed = 1
    TIMEOUT timeBeforePausing ST_PAUSING
    SETSTATE ST_PAUSING
  ENDTEST
	TEST ErrorCode = ST_ERROR
		TIMEOUT timeBeforePausing ST_PAUSING
    SETSTATE ST_PAUSING
	ENDTEST
	TEST Emergency = ST_POWEROFF
		SET errorCode 203
		SETSTATE ST_ERROR
	ENDTEST
END

State=ST_STOPPING
  SETSTATE ST_IDLE
	TEST Emergency = ST_POWEROFF
		SET errorCode 203
		SETSTATE ST_ERROR
	ENDTEST
END

State=ST_PAUSING
; dont test for trafficlight :-)
	TEST timeBeforePausing = 1
;	AND ConveyorIn = ST_IDLE
;	AND ConveyorOutCP = ST_IDLE
	AND ConveyorOut = ST_IDLE
;	AND Pallebane1 = ST_IDLE
;	AND Pallebane2 = ST_IDLE
;	AND Pallebane2A = ST_IDLE
;	AND Pallebane2B = ST_IDLE
;	AND Pallebane3 = ST_IDLE
;	AND Pallebane4 = ST_IDLE
;	AND Pallebane5 = ST_IDLE
	AND Pallebane6 = ST_IDLE
	AND Pallebane7 = ST_IDLE
	AND Pallebane8 = ST_IDLE
;	AND Pallebane8A = ST_IDLE
;	AND Pallebane8B = ST_IDLE
;	AND Pallebane9 = ST_IDLE
	AND delaystop = 0
	AND moving = 0
	  SETSTATE ST_PAUSED
	ENDTEST
	TEST Emergency = ST_POWEROFF
		SET errorCode 203
		SETSTATE ST_ERROR
	ENDTEST
END

State=ST_PAUSED
	TEST newprogram = 1
		SETSTATE ST_IDLE
	ELSETEST ContinueKnap = ST_HIGH
		TIMEOUT timeBeforeRunning ST_RESTARTING
		SETSTATE ST_RESTARTING
	ENDTEST
END

State=ST_ERROR
  TEST ContinueKnap = ST_HIGH
	  TEST Emergency = ST_POWERON
  		SET errorCode 0
      TIMEOUT timeBeforeRunning ST_STARTING
      SETSTATE ST_STARTING
    ENDTEST
  ENDTEST
END

State=ST_RESET
END

State=ST_TIMER
END
