STATEMACHINEVERSION 3
Include=randomvalues.statemachine
Name=ProgramB2
;*******************************************
;* LINK's                 
;*******************************************
Link=program Program320
Link=parent Parent
Link=robot Robot
Link=Tool
Link=ConveyorOut
Link=ScissorPalletizer3_6
Link=ScissorDepalletizer3_3
Link=CardBoardShuttle
;*******************************************
;* VALUE's                
;*******************************************
linkValue=wBLayer Program320
linkValue=wBItemsPerLayer Program320
linkValue=timeInPalletB Program320
linkValue=WorkCellFirstRun firstRun WorkCell
linkValue=nextcardboardlayer CardBoardShuttle
linkValue=prenextcardboardlayer CardBoardShuttle
;when roboError > 0 and restart = 1 the workcell can be restarted 
linkValue=restart RoboError
linkValue=resetpreload Loader
;when 2 or more path's must run as one - set delaystop = 1
;before start off first path and = 0 after last
;executer will test this value before pausing execution
linkValue=delaystop Robot
linkValue=axis_t Robot
linkValue=pathtype Robot
linkValue=nextpalb Frames
linkValue=userPalletOut Frames
linkValue=cBItem Frames
linkValue=wBItem Frames
linkValue=itemCounter Frames
linkValue=roboMessageCached RoboError
linkValue=mposreq Robot
linkValue=mpostcpidx Robot
linkValue=sc3_6limitup test Sc3_6PhotoUpLimit
Value=errorCode 0
Const=sBItem 0
Const=axis_tnextcardboardlayer 20000
Value=userSetcBItem 0
Value=loaded 0
Value=temp 0
Value=ftemp 0.0
Value=oneshot 0
Value=oneshot2 0
Value=checkScissors 0
Const=useInter 0
Const=xvarimin -1.0000
Const=xvarimax 1.0000
Const=zvarimin -1.0000
Const=zvarimax 1.0000
Const=thisSeed 30
Value=simulate 0
Value=tester 0
;*******************************************
;* FRAME LINKVALUE's                
;*******************************************
linkValue=base Frames 
linkValue=home Frames
linkValue=homeHigh Frames
linkValue=palletB0 Frames
linkValue=conveyorB Frames
linkValue=inter Frames
linkValue=mpos Robot
;*******************************************
;* ALL EXISTING PATH TYPES
;*******************************************
Path=home_conveyorB                 21 23
Path=conveyorB_palletB              21 24
Path=conveyorB_inter                22 24
Path=inter_palletB                  23 24
Path=palletB_home                   21 25
Path=palletB_conveyorB              21 44
Path=home_home                      21 16
Path=conveyorB_home                 21 43
;*******************************************
;* ITEM's                    
;*******************************************
linkValue=item Program320
;Item=item CanLayer1
;Item=itemCan1 CanLayer1
;Item=itemJar1 JarLayer1
;Item=itemCan2 CanLayer2
;Item=itemJar2 JarLayer2
;*******************************************
;* PATTERN's     
;*******************************************
;Pattern=patternB 30410Kg_80
;*******************************************
;* FRAME's
;*******************************************
Frame=fromFrame x=0.0 y=0.0 z=0.0 v=0.0 w=0.0 u=0.0 
Frame=toFrame x=0.0 y=0.0 z=0.0 v=0.0 w=0.0 u=0.0 
;*******************************************
;* TIMEOUT's                    
;*******************************************
Timeout=TimeInPalletB 300000
Timeout=TimeInConveyorB 20000000
;*******************************************
;* STATES                    
;*******************************************
State=ST_HALT
END

State=ST_TIMER
END

State=ST_ERROR
	TEST parent != ST_RUN
	OR simulate = 1
		SETSTATE ST_IDLE
	ENDTEST
END

State=ST_IDLE
  SET delaystop 0
  TEST parent = ST_RUN
	OR simulate = 1
		SET errorCode 0
    SETSTATE ST_RESET
  ENDTEST
END

State=ST_RESET
	SET TimeInPalletB timeInPalletB
	SET loaded 0
	SET errorCode 0
	;set state = ST_IDLE for alle path's and set maxidx = 0 in pathTable
	;stafet value
  TEST resetpreload = 0
    SET resetpreload 1
  ENDTEST
  TEST resetpreload = 3
    SET resetpreload 0
    TEST WorkCellFirstRun = 1
    OR restart = 0
	    SETSTATE ST_START
    ELSE
      SETSTATE ST_RESTART
    ENDTEST
  ENDTEST
END
;*******************************************
;* RESTART FROM SOMEWHERE
;*******************************************
State=ST_RESTART
	;  kun een bopt fil for hver robot
	;  en ppscripttype for hver konfiguration(tool)
  SET delaystop 0
	TEST mposreq = 0
		SET mpostcpidx 0
		SET mposreq 1
	ENDTEST 
  TEST home_home.state < ST_INACTIVE
	AND mposreq = 2
		SET mposreq 0
    LOAD home_home mpos home
		SETSTATE ST_WAIT_HOME_HOME_LOADED
  ENDTEST
END
;*******************************************
;* START FROM SCRATCH
;*******************************************
State=ST_START
	;  kun een bopt fil for hver robot
	;  en ppscripttype for hver konfiguration(tool)
	SET delaystop 0
	SET randseed thisSeed
	INLINE inlineSeedRandom.statemachine
  TEST mposreq = 0
		SET mpostcpidx 0
		SET mposreq 1
	ENDTEST
	TEST home_home.state < ST_INACTIVE
	AND mposreq = 2
		CALC wBItem = wBLayer * wBItemsPerLayer
    SET restart 1
    TEST userSetcBItem = 0
		  SET cBItem sBItem
      TEST sc3_6limitup = 0
        SET nextpalb 1
      ENDTEST
    ELSE
      SET cBItem userSetcBItem
      SET nextpalb 0
    ENDTEST
    SET userSetcBItem 0
    SET itemCounter cBItem
	  SET nextcardboardlayer 1
		SET mposreq 0
		LOAD home_home mpos home 
	  SETSTATE ST_WAIT_HOME_HOME_LOADED
  ENDTEST
END
;*******************************************
;* ST_WAIT_HOME_HOME_LOADED
;*******************************************
State=ST_WAIT_HOME_HOME_LOADED
  TEST home_home.state = ST_LOADED
	  TEST home_conveyorB.state < ST_INACTIVE
			SETFRAME toFrame conveyorB
			CALC toFrame.y = toFrame.y + item.gy
			SET randmin xvarimin
			SET randmax xvarimax
			INLINE inlineComputeRandom.statemachine
			CALC toFrame.x = toFrame.x + randres
			SET randmin zvarimin
			SET randmax zvarimax
			INLINE inlineComputeRandom.statemachine
			CALC toFrame.z = toFrame.z + randres 
			LOAD home_conveyorB home toFrame
      SET delaystop 0
      PRINT home_home
      EXEC home_home
      SETSTATE ST_HOME_HOME
    ENDTEST
  ENDTEST
END
;*******************************************
;*
;*       F R A M E - S T A T E S
;*
;*******************************************
;*******************************************
;* ST_HOME
;*******************************************
State=ST_HOME
	TEST parent = ST_RUN
	AND roboMessageCached = 0
	OR simulate = 1
    TEST home_conveyorB.state = ST_LOADED
			TEST loaded = 0
      AND conveyorB_palletB.state < ST_INACTIVE
      AND conveyorB_home.state < ST_INACTIVE
      AND conveyorB_inter.state < ST_INACTIVE
			AND inter_palletB < ST_INACTIVE
				;*******************************************
				TEST userPalletOut = 1
					SET userPalletOut 0
					SET cBItem sBItem
          SET itemCounter cBItem
					SET nextpalb 1
				ENDTEST
				;*******************************************
				SETFRAME fromFrame toFrame
				SETFRAME toFrame palletB0
				CALC toFrame.y = toFrame.y + item.gy
        SET conveyorB_palletB.mode 21
				LOAD conveyorB_palletB fromFrame toFrame
				LOAD conveyorB_home fromFrame home
        ;load inter paths
        SET conveyorB_inter.mode 22
				LOAD conveyorB_inter fromFrame inter
        SET inter_palletB.mode 23
				LOAD inter_palletB inter toFrame
				SET loaded 1
			ENDTEST
			TEST loaded = 1
			AND ConveyorOut = ST_READY_ROBOT
;			AND ScissorPalletizer3_6 = ST_READY_ROBOT
;			AND Tool = ST_GO
			AND nextpalb = 0
			OR loaded = 1
			AND tester = 1
        TEST checkScissors = 1
        AND ScissorDepalletizer3_3 = ST_READY_ROBOT
        AND ScissorPalletizer3_6 = ST_READY_ROBOT
        OR checkScissors = 0
          SET checkScissors 0
				  SET tester 0
				  SET delaystop 1
          SET oneshot2 0
          PRINT home_conveyorB
				  EXEC home_conveyorB
				  SETSTATE ST_HOME_CONVEYORB
        ELSETEST ScissorDepalletizer3_3 = ST_READY_ROBOT
        AND ScissorPalletizer3_6 = ST_SEARCH_EDGE
        AND cBItem = 0
          SET checkScissors 0
				  SET tester 0
				  SET delaystop 1
          SET oneshot2 0
          PRINT home_conveyorB
				  EXEC home_conveyorB
				  SETSTATE ST_HOME_CONVEYORB          
        ELSETEST useInter = 1
	      AND ScissorDepalletizer3_3 = ST_READY_ROBOT
        AND CardBoardShuttle != ST_PLACEDOWN
        AND CardBoardShuttle != ST_PLACE
        AND CardBoardShuttle != ST_PLACEUP
        AND CardBoardShuttle != ST_BEGINHOME
        AND CardBoardShuttle != ST_GOHOME
	        TEST cBItem < wBItem
            TEST cBItem = 0
              TEST ScissorPalletizer3_6 = ST_SEARCH_EDGE
                ;new pallet
                SET checkScissors 0
				        SET tester 0
				        SET delaystop 1
                SET oneshot2 0
                PRINT home_conveyorB
				        EXEC home_conveyorB
				        SETSTATE ST_HOME_CONVEYORB
              ENDTEST
            ELSE
              TEST ScissorPalletizer3_6 = ST_READY_ROBOT
              OR ScissorPalletizer3_6 = ST_PRE_EDGEOFF
              OR ScissorPalletizer3_6 = ST_SEARCH_EDGEOFF
              OR ScissorPalletizer3_6 = ST_ONETIME_CENTRE
              OR ScissorPalletizer3_6 = ST_SEARCH_EDGE
                SET checkScissors 0
				        SET tester 0
				        SET delaystop 1
                SET oneshot2 0
                PRINT home_conveyorB
				        EXEC home_conveyorB
				        SETSTATE ST_HOME_CONVEYORB
              ENDTEST
            ENDTEST
          ENDTEST
        ENDTEST
			ENDTEST
    ENDTEST
  ELSETEST roboMessageCached = 333
		SET errorCode 333
		SETSTATE ST_ERROR
	ELSE
		SETSTATE ST_IDLE
  ENDTEST
END
;*******************************************
;* ST_INTER
;*******************************************
State=ST_INTER
	SET delaystop 0
	TEST inter_palletB.state = ST_LOADED
		TEST Tool = ST_GO
		AND nextcardboardlayer = 0
    AND ScissorPalletizer3_6 = ST_READY_ROBOT
		OR simulate = 1
			SET delaystop 1
      PRINT inter_palletB
			EXEC inter_palletB
			SETSTATE ST_INTER_PALLETB
		ENDTEST
	ENDTEST
END
;*******************************************
;* ST_CONVEYORB
;*******************************************
State=ST_CONVEYORB
	TEST parent = ST_RUN
	AND ConveyorOut = ST_READY_ROBOT
	AND userPalletOut = 0
	OR simulate = 1
		TEST conveyorB_palletB.state = ST_LOADED
    AND conveyorB_inter.state = ST_LOADED
    AND inter_palletB.state = ST_LOADED
			TEST loaded = 0
			AND palletB_home.state < ST_INACTIVE
			AND palletB_conveyorB.state < ST_INACTIVE
				SETFRAME fromFrame toFrame
				;*****************************************
				SETFRAME toFrame conveyorB
				CALC toFrame.y = toFrame.y + item.gy
				SET randmin xvarimin
				SET randmax xvarimax
				INLINE inlineComputeRandom.statemachine
				CALC toFrame.x = toFrame.x + randres
				SET randmin zvarimin
				SET randmax zvarimax
				INLINE inlineComputeRandom.statemachine
				CALC toFrame.z = toFrame.z + randres 
				LOAD palletB_conveyorB fromFrame toFrame
				;*****************************************
				LOAD palletB_home fromFrame home
				SET loaded 1
			ENDTEST
			TEST loaded = 1
			AND Tool = ST_GO
			AND nextcardboardlayer = 0
	    AND ScissorPalletizer3_6 = ST_READY_ROBOT
			OR simulate = 1
				SET delaystop 1
        PRINT conveyorB_palletB
				EXEC conveyorB_palletB
				SETSTATE ST_CONVEYORB_PALLETB
      ELSETEST loaded = 1
			AND Tool = ST_GO
      AND useInter = 1
	    AND ScissorDepalletizer3_3 = ST_READY_ROBOT
      AND CardBoardShuttle != ST_PLACEDOWN
      AND CardBoardShuttle != ST_PLACE
      AND CardBoardShuttle != ST_PLACEUP
      AND CardBoardShuttle != ST_BEGINHOME
      AND CardBoardShuttle != ST_GOHOME
        TEST cBItem < wBItem
          TEST cBItem = 0
            TEST ScissorPalletizer3_6 = ST_SEARCH_EDGE
            OR ScissorPalletizer3_6 = ST_READY_ROBOT
				      SET delaystop 1
              PRINT conveyorB_inter
				      EXEC conveyorB_inter
				      SETSTATE ST_CONVEYORB_INTER
            ENDTEST
          ELSE
	          TEST ScissorPalletizer3_6 = ST_READY_ROBOT
            OR ScissorPalletizer3_6 = ST_PRE_EDGEOFF
            OR ScissorPalletizer3_6 = ST_SEARCH_EDGEOFF
            OR ScissorPalletizer3_6 = ST_ONETIME_CENTRE
            OR ScissorPalletizer3_6 = ST_SEARCH_EDGE
				      SET delaystop 1
              PRINT conveyorB_inter
				      EXEC conveyorB_inter
				      SETSTATE ST_CONVEYORB_INTER
            ENDTEST
          ENDTEST
        ENDTEST
			ENDTEST
		ENDTEST
	ELSETEST conveyorB_home.state = ST_LOADED
		TEST home_conveyorB.state < ST_INACTIVE
      SETSTATE ST_CONVEYORB_ABORT
    ENDTEST
	ENDTEST
END
;*******************************************
;* ST_CONVEYORB_ABORT
;*******************************************
State=ST_CONVEYORB_ABORT
  TEST conveyorB_home.state = ST_LOADED
		TEST home_conveyorB.state < ST_INACTIVE 
		AND loaded != 3
      SETFRAME toFrame conveyorB
			CALC toFrame.y = toFrame.y + item.gy
			SET randmin xvarimin
			SET randmax xvarimax
			INLINE inlineComputeRandom.statemachine
			CALC toFrame.x = toFrame.x + randres
			SET randmin zvarimin
			SET randmax zvarimax
			INLINE inlineComputeRandom.statemachine
			CALC toFrame.z = toFrame.z + randres
			LOAD home_conveyorB home toFrame
      SET loaded 3
	  ENDTEST
    TEST loaded = 3
	  AND Tool = ST_GO
      PRINT conveyorB_home
			EXEC conveyorB_home
			SETSTATE ST_CONVEYORB_HOME
		ENDTEST
	ENDTEST
END
;*******************************************
;* ST_PALLETB
;*******************************************
State=ST_PALLETB
  ;ScissorPalletizer3_6 = ST_READY_ROBOT from layer just placed?
	TEST parent = ST_RUN
	AND ConveyorOut = ST_READY_ROBOT
;	AND ScissorPalletizer3_6 = ST_READY_ROBOT
	AND cBItem < wBItem
	AND userPalletOut = 0
	AND roboMessageCached = 0
	OR simulate = 1
		TEST palletB_conveyorB.state = ST_LOADED
			TEST loaded != 1
		  AND conveyorB_palletB.state < ST_INACTIVE
			AND conveyorB_home.state < ST_INACTIVE 
      AND conveyorB_inter.state < ST_INACTIVE
			AND inter_palletB < ST_INACTIVE
				SETFRAME fromFrame toFrame
				SETFRAME toFrame palletB0
				CALC toFrame.y = toFrame.y + item.gy
        SET conveyorB_palletB.mode 21
				LOAD conveyorB_palletB fromFrame toFrame
				LOAD conveyorB_home fromFrame home
        ;load inter paths
        SET conveyorB_inter.mode 22
				LOAD conveyorB_inter fromFrame inter
        SET inter_palletB.mode 23
				LOAD inter_palletB inter toFrame
				SET loaded 1
			ENDTEST
			TEST loaded = 1
			AND Tool = ST_GO
				SET delaystop 1
        PRINT palletB_conveyorB
		    EXEC palletB_conveyorB
				SET oneshot 0
        SET oneshot2 0
		    SETSTATE ST_PALLETB_CONVEYORB
		  ENDTEST
		ENDTEST
	ELSETEST TimeInPalletB = 1
	OR parent != ST_RUN
	OR cBItem >= wBItem 
	OR userPalletOut = 1
	OR roboMessageCached != 0
		TEST palletB_home.state = ST_LOADED
			TEST loaded != 2
			AND home_conveyorB.state < ST_INACTIVE
				SETFRAME toFrame conveyorB
				CALC toFrame.y = toFrame.y + item.gy
				SET randmin xvarimin
				SET randmax xvarimax
				INLINE inlineComputeRandom.statemachine
				CALC toFrame.x = toFrame.x + randres
				SET randmin zvarimin
				SET randmax zvarimax
				INLINE inlineComputeRandom.statemachine
				CALC toFrame.z = toFrame.z + randres 
				LOAD home_conveyorB home toFrame
				SET loaded 2
			ENDTEST
			TEST loaded = 2
			AND Tool = ST_GO
        PRINT palletB_home
				EXEC palletB_home
				SET oneshot 0
				SETSTATE ST_PALLETB_HOME
			ENDTEST
		ENDTEST
	ENDTEST
END
;*******************************************
;*
;*       P A T H - S T A T E S
;*
;*******************************************
;*******************************************
;* ST_HOME_HOME
;*******************************************
State=ST_HOME_HOME
  TEST home_home.state = ST_EXECUTING
      ;
  ELSETEST home_home.state = ST_FINISHED
		SET loaded 0
	  SETSTATE ST_HOME
  ELSETEST home_home.state = ST_ERROR
  AND parent = ST_IDLE
    SETSTATE ST_IDLE
  ENDTEST 
END
;*******************************************
;* ST_HOME_CONVEYORB
;*******************************************
State=ST_HOME_CONVEYORB
  TEST home_conveyorB.state = ST_EXECUTING
		;
  ELSETEST home_conveyorB.state = ST_FINISHED
    TEST oneshot2 = 0
      SET oneshot2 1
      TIMEOUT TimeInConveyorB ST_HOME_CONVEYORB
      SETSTATE ST_HOME_CONVEYORB
    ENDTEST
		SET loaded 0
	  TEST parent = ST_RUN
	  AND ConveyorOut = ST_READY_ROBOT
	  AND ScissorPalletizer3_6 = ST_READY_ROBOT
		AND nextcardboardlayer = 0
    OR parent = ST_RUN
	  AND ConveyorOut = ST_READY_ROBOT
	  AND ScissorPalletizer3_6 = ST_READY_ROBOT
    AND prenextcardboardlayer = 1
      SET prenextcardboardlayer 0
		  SETSTATE ST_CONVEYORB
    ELSETEST TimeInConveyorB = 1
      SET checkScissors 1
      SETSTATE ST_CONVEYORB_ABORT
    ELSETEST parent != ST_RUN
      SETSTATE ST_CONVEYORB_ABORT
    ELSETEST parent = ST_RUN
	  AND ConveyorOut = ST_READY_ROBOT
    AND useInter = 1
	  AND ScissorDepalletizer3_3 = ST_READY_ROBOT
    AND CardBoardShuttle != ST_PLACEDOWN
    AND CardBoardShuttle != ST_PLACE
    AND CardBoardShuttle != ST_PLACEUP
    AND CardBoardShuttle != ST_BEGINHOME
    AND CardBoardShuttle != ST_GOHOME
    AND cBItem < wBItem
	    TEST ScissorPalletizer3_6 = ST_READY_ROBOT
      OR ScissorPalletizer3_6 = ST_PRE_EDGEOFF
      OR ScissorPalletizer3_6 = ST_SEARCH_EDGEOFF
      OR ScissorPalletizer3_6 = ST_ONETIME_CENTRE
      OR ScissorPalletizer3_6 = ST_SEARCH_EDGE
        SET prenextcardboardlayer 0
		    SETSTATE ST_CONVEYORB
      ENDTEST
    ENDTEST
  ELSETEST home_conveyorB.state = ST_ERROR
  AND parent = ST_IDLE
    SETSTATE ST_IDLE
  ENDTEST 
END
;*******************************************
;* ST_CONVEYORB_HOME
;*******************************************
State=ST_CONVEYORB_HOME
  TEST conveyorB_home.state = ST_EXECUTING
		SET delaystop 0
	ELSETEST conveyorB_home.state = ST_FINISHED
		SET loaded 0
		SETSTATE ST_HOME
	ELSETEST conveyorB_home.state = ST_ERROR
	AND parent = ST_IDLE
		SETSTATE ST_IDLE
	ENDTEST 
END
;*******************************************
;* ST_CONVEYORB_PALLETB
;*******************************************
State=ST_CONVEYORB_PALLETB
  TEST conveyorB_palletB.state = ST_EXECUTING
		;
  ELSETEST conveyorB_palletB.state = ST_FINISHED
    CALC cBItem = cBItem + 1
    SET itemCounter cBItem
    PRINT cBItem
		SET loaded 0
		TIMEOUT TimeInPalletB ST_PALLETB
    SETSTATE ST_PALLETB
  ELSETEST conveyorB_palletB.state = ST_ERROR
  AND parent = ST_IDLE
    SETSTATE ST_IDLE
  ENDTEST
END
;*******************************************
;* ST_CONVEYORB_PALLETB
;*******************************************
State=ST_INTER_PALLETB
  TEST inter_palletB.state = ST_EXECUTING
		;
  ELSETEST inter_palletB.state = ST_FINISHED
    CALC cBItem = cBItem + 1
    SET itemCounter cBItem
    PRINT cBItem
		SET loaded 0
		TIMEOUT TimeInPalletB ST_PALLETB
    SETSTATE ST_PALLETB
  ELSETEST inter_palletB.state = ST_ERROR
  AND parent = ST_IDLE
    SETSTATE ST_IDLE
  ENDTEST
END
;*******************************************
;* ST_CONVEYORB_INTER
;*******************************************
State=ST_CONVEYORB_INTER
  TEST conveyorB_inter.state = ST_EXECUTING
		;
  ELSETEST conveyorB_inter.state = ST_FINISHED
		SET loaded 0
    SETSTATE ST_INTER
  ELSETEST conveyorB_inter.state = ST_ERROR
  AND parent = ST_IDLE
    SETSTATE ST_IDLE
  ENDTEST
END
;*******************************************
;* ST_PALLETB_CONVEYORB
;*******************************************
State=ST_PALLETB_CONVEYORB
  TEST palletB_conveyorB.state = ST_EXECUTING
		TEST oneshot = 0
		AND pathtype = 44
		AND axis_t > axis_tnextcardboardlayer
		AND axis_t < 990000
			SET oneshot 1
			SET nextcardboardlayer 1
		ENDTEST
  ELSETEST palletB_conveyorB.state = ST_FINISHED
		SET loaded 0
		TEST oneshot = 0
      SET oneshot 1
			SET nextcardboardlayer 1
		ENDTEST
    TEST oneshot2 = 0
      SET oneshot2 1
      TIMEOUT TimeInConveyorB ST_PALLETB_CONVEYORB
      SETSTATE ST_PALLETB_CONVEYORB
    ENDTEST
	  TEST parent = ST_RUN
	  AND ConveyorOut = ST_READY_ROBOT
	  AND ScissorPalletizer3_6 = ST_READY_ROBOT
		AND nextcardboardlayer = 0
    OR parent = ST_RUN
	  AND ConveyorOut = ST_READY_ROBOT
	  AND ScissorPalletizer3_6 = ST_READY_ROBOT
    AND prenextcardboardlayer = 1
      SET prenextcardboardlayer 0
		  SETSTATE ST_CONVEYORB
    ELSETEST TimeInConveyorB = 1
      SET checkScissors 1
      SETSTATE ST_CONVEYORB_ABORT
    ELSETEST parent != ST_RUN
      SETSTATE ST_CONVEYORB_ABORT
    ELSETEST parent = ST_RUN
	  AND ConveyorOut = ST_READY_ROBOT
    AND useInter = 1
	  AND ScissorDepalletizer3_3 = ST_READY_ROBOT
    AND CardBoardShuttle != ST_PLACEDOWN
    AND CardBoardShuttle != ST_PLACE
    AND CardBoardShuttle != ST_PLACEUP
    AND CardBoardShuttle != ST_BEGINHOME
    AND CardBoardShuttle != ST_GOHOME
    AND cBItem < wBItem
	    TEST ScissorPalletizer3_6 = ST_READY_ROBOT
      OR ScissorPalletizer3_6 = ST_PRE_EDGEOFF
      OR ScissorPalletizer3_6 = ST_SEARCH_EDGEOFF
      OR ScissorPalletizer3_6 = ST_ONETIME_CENTRE
      OR ScissorPalletizer3_6 = ST_SEARCH_EDGE
        SET prenextcardboardlayer 0
		    SETSTATE ST_CONVEYORB
      ENDTEST
    ENDTEST
  ELSETEST palletB_conveyorB.state = ST_ERROR
  AND parent = ST_IDLE
		SETSTATE ST_IDLE
  ENDTEST 
END
;*******************************************
;* ST_PALLETB_HOME
;*******************************************
State=ST_PALLETB_HOME
  TEST palletB_home.state = ST_EXECUTING
		SET delaystop 0
		TEST oneshot = 0
		AND pathtype = 25
		AND axis_t > axis_tnextcardboardlayer
		AND axis_t < 990000
		  TEST cBItem < wBItem
			  SET oneshot 1
			  SET nextcardboardlayer 1
      ELSETEST cBItem >= wBItem
        SET nextpalb 1
			  SET oneshot 1
      ENDTEST
		ENDTEST
  ELSETEST palletB_home.state = ST_FINISHED
		TEST oneshot = 0
		AND cBItem < wBItem
			SET oneshot 1
			SET nextcardboardlayer 1
		ENDTEST
		TEST cBItem >= wBItem
      SET checkScissors 1
			SET cBItem sBItem
      SET itemCounter cBItem
		ENDTEST
		SET loaded 0
		SETSTATE ST_HOME
  ELSETEST palletB_home.state = ST_ERROR
  AND parent = ST_IDLE
		SETSTATE ST_IDLE
  ENDTEST 
END
