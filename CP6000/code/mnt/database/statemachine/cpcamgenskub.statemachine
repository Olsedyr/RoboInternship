STATEMACHINEVERSION 3
Name=CamGenSkub
;** Input **
;** Output **
;** Link **
Link=PID PIDSkub
Link=Master LangBufferSkub
;** linkValue **
linkValue=encoder PID
linkValue=ticksround PID
;** Table **
;** Const **
Const=posBack 0
Const=posForward 0
Const=tTimeForward 1500000
Const=tTimeForwardStay 900000
Const=tTimeBack 900000
;** Value **
Value=setspeed 0
Value=setpoint 0
Value=beginpos 0.0
Value=endpos 0.0
Value=beginspeed 0.0
Value=endspeed 0.0
Value=ticksroundhalf 0
Value=ticksroundquart 0
Value=curpos 0
Value=curt 0
Value=temp 0
Value=ga 0.0
Value=gb 0.0
Value=gc 0.0
Value=gd 0.0
Value=xtot 0.0
Value=curpm 0.0
Value=millitot 0.0
Value=curpos 0.0
Value=curspeed 0.0
Value=tcpm 0.0
Value=curt 0
Value=testmode 0
Value=teststate 0
;** Timeout **
Timeout=ttot 5000000
Timeout=TimeTest 3000000

State=ST_TIMER
END

State=ST_HALT
END

State=ST_IDLE
	TEST Master = ST_RESET
		SETSTATE ST_RESET
	ENDTEST
END

State=ST_RESET
  SETSTATE ST_NOCHOOSETRACK
END

State=ST_NOCHOOSETRACK
	SET setpoint encoder
	TEST PID = ST_RUN
		SETSTATE ST_CHOOSETRACK
  ELSETEST PID = ST_WAIT_CAMGEN_IDLE
    SETSTATE ST_IDLE
	ENDTEST
END

State=ST_CHOOSETRACK
	SET beginspeed 0.0
	SET endspeed 0.0
  TEST PID = ST_RUN
    CALC ticksroundhalf = ticksround / 2
    TEST Master = ST_BEGINBACK
      SET ttot tTimeBack
      CALC beginpos = encoder % ticksround
      CALC ticksroundquart = ticksroundhalf / 2
      TEST beginpos > ticksroundquart
        CALC endpos = ticksround + posBack
      ELSE
        SET endpos posBack
      ENDTEST
      SETSTATE ST_START
    ELSE
      TEST Master = ST_BEGINFORWARDSTAY
        SET ttot tTimeForwardStay
        CALC beginpos = encoder + ticksroundhalf
        CALC beginpos = beginpos % ticksround
        CALC beginpos = beginpos - ticksroundhalf
        CALC endpos = ticksroundhalf + posForward
        SETSTATE ST_START
			ELSE
				TEST Master = ST_BEGINFORWARD
					SET ttot tTimeForward
					CALC beginpos = encoder + ticksroundhalf
					CALC beginpos = beginpos % ticksround
					CALC beginpos = beginpos - ticksroundhalf
					CALC endpos = ticksround + posBack
					SETSTATE ST_START
        ELSE
          TEST testmode = 1
					  TEST teststate = 0
						  SET teststate 1
              ;forward
					    SET ttot tTimeForward
					    CALC beginpos = encoder + ticksroundhalf
					    CALC beginpos = beginpos % ticksround
					    CALC beginpos = beginpos - ticksroundhalf
					    CALC endpos = ticksround + posBack
						  SETSTATE ST_START
					  ELSE
						  TEST teststate = 1
							  SET teststate 2
                ;forwardstay
                SET ttot tTimeForwardStay
                CALC beginpos = encoder + ticksroundhalf
                CALC beginpos = beginpos % ticksround
                CALC beginpos = beginpos - ticksroundhalf
                CALC endpos = ticksroundhalf + posForward
							  SETSTATE ST_START
              ELSE
                TEST teststate = 2
							    SET teststate 0
                  ;back
                  SET ttot tTimeBack
                  CALC beginpos = encoder % ticksround
                  CALC ticksroundquart = ticksroundhalf / 2
                  TEST beginpos > ticksroundquart
                    CALC endpos = ticksround + posBack
                  ELSE
                    SET endpos posBack
                  ENDTEST
							    SETSTATE ST_START
                ENDTEST
						  ENDTEST
					  ENDTEST
				  ENDTEST
				ENDTEST
      ENDTEST
    ENDTEST
	ELSE
		SET setspeed 0
		SETSTATE ST_NOCHOOSETRACK
  ENDTEST
  TEST Master = ST_IDLE
  AND testmode = 0
    SETSTATE ST_IDLE
  ENDTEST
END

State=ST_STOP
  SET curpm 1000.0
  SET setpoint endpos
	SET setspeed 0
  TEST testmode = 1
    TIMEOUT TimeTest ST_CHOOSETRACK
    SETSTATE ST_TIMER
  ELSE
    SETSTATE ST_CHOOSETRACK
  ENDTEST
END

State=ST_START
  SET setpoint beginpos
	SET setspeed 0
  CALC xtot = endpos - beginpos
  SET curpm 0.0
  TEST xtot < 100.0
  AND xtot > -100.0
		SET setpoint endpos
	  SETSTATE ST_STOP
  ELSE
		TIMEOUT ttot ST_RUN
		SETSTATE ST_RUN
  ENDTEST
END

; position is in ticks
; begin/end speeds are in ticks/sec.
; setspeed unit is in ticks/sec.

State=ST_RUN
  SET curt ttot
  CALC curt = ttot - curt
	CALC millitot = ttot / 1000.0
	CALC curpm = curt / millitot
	;	PRINT curpm
	CALC curpos = 2000.0 * beginpos
	CALC tcpm = curpm - 1000.0
	CALC ga = tcpm * tcpm
	CALC gb = 500.0 + curpm
	CALC ga = ga * gb
	CALC curpos = curpos * ga
	CALC ga = curpm - 1500.0
  CALC ga = ga * curpm
	CALC ga = ga * endpos
	CALC ga = ga * -2000.0
	CALC gb = tcpm * millitot
	CALC gc = tcpm * beginspeed
	CALC gd = curpm * endspeed
	CALC gc = gc + gd
	CALC gb = gb * gc
	CALC ga = ga + gb
	CALC ga = ga * curpm
	CALC curpos = curpos + ga
	CALC curpos = curpos / 1000000000000.0
	SET setpoint curpos
	CALC ga = beginpos - endpos
	CALC ga =  ga * curpm
	CALC ga = ga * 6000.0
	CALC gb = curpm * 3.0
	CALC gb = gb - 1000.0
	CALC gc = gb - 1000.0
	CALC gb = gb * millitot
	CALC gb = gb * beginspeed
	CALC curspeed = ga + gb
	CALC curspeed = curspeed * tcpm
	CALC gc = gc * millitot
	CALC gc = gc * endspeed
	CALC gc = gc * curpm
	CALC curspeed = curspeed + gc
	CALC curspeed = curspeed / 1000000.0
	CALC curspeed = curspeed / millitot
	SET setspeed curspeed
	; ved samplerate p√• ca. 126 Hz 
  TEST ttot < 3800
    SETSTATE ST_STOP
  ENDTEST
  ;skip stop state if something is wrong, e.g. follow error
  TEST PID != ST_RUN
    SETSTATE ST_IDLE
  ENDTEST
END
