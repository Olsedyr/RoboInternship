STATEMACHINEVERSION 3
Include=casekind.statemachine
Include=nspattern.statemachine
Name=ProgramHP
;*******************************************
;* LINK's                 
;*******************************************
Link=program Program304
Link=parent Parent
Link=robot Robot
Link=Tool
Link=ConveyorOut Conv1
Link=Pallebane6 PallebanePS
Link=PS PS
;*******************************************
;* VALUE's                
;*******************************************
linkValue=wBItemsPerLayer program 
linkValue=wBItems program
linkValue=timeInPalletB program
linkValue=WorkCellFirstRun firstRun WorkCell
;when roboError > 0 and restart = 1 the workcell can be restarted 
linkValue=restart RoboError 
linkValue=resetpreload Loader 
;when 2 or more path's must run as one - set delaystop = 1
;before start off first path and = 0 after last
;executer will test this value before pausing execution
linkValue=delaystop Robot
linkValue=axis_t Robot
linkValue=pathtype Robot
linkValue=casekind program
linkValue=nspattern program
linkValue=activeProgram program
linkValue=nextpalb Frames
linkValue=userPalletOut Frames
linkValue=cBItem Frames
linkValue=wBItem Frames
linkValue=roboMessageCached RoboError
linkValue=counteroffset offset PScounter
linkValue=moveBag ConveyorOut
Value=errorCode 0
Const=sBItem 0
Value=loaded 0
Value=ftemp 0.0
;*******************************************
;* TOOL OUTPUT                      
;*******************************************
;TODO seperate statemachine for Modhold and Griber
Output=modhold "Tool Modhold"
Output=griber "Tool Griber"
;*******************************************
;* FRAME LINKVALUE's                
;*******************************************
linkValue=base Frames 
linkValue=home Frames
linkValue=homeHigh Frames
linkValue=palletB Frames
linkValue=conveyorBplast Frames
;*******************************************
;* ALL EXISTING PATH TYPES
;*******************************************
Path=home_conveyorB            31 12
Path=conveyorB_palletB         31 13
Path=palletB_home              31 14
;
Path=palletB_conveyorB         32 14
Path=home_home                 31 11
Path=conveyorB_home            33 11
;*******************************************
;* ITEM's                    
;*******************************************
Item=item 5KgPlast
Item=item5KgPlast 5KgPlast
;*******************************************
;* PATTERN's                 
;*******************************************
Pattern=patternB 3045KgPlast_40
Pattern=p5KgPlast_40 3045KgPlast_40
;*******************************************
;* FRAME's
;*******************************************
Frame=fromFrame x=0.0 y=0.0 z=0.0 v=0.0 w=0.0 u=0.0 
Frame=toFrame x=0.0 y=0.0 z=0.0 v=0.0 w=0.0 u=0.0 
;*******************************************
;* TIMEOUT's                    
;*******************************************
Timeout=TimeInPalletB 300000
;*******************************************
;* STATES                    
;*******************************************
State=ST_HALT
END

State=ST_TIMER
END

State=ST_ERROR
	TEST parent != ST_RUN
		SETSTATE ST_IDLE
	ENDTEST
END

State=ST_IDLE
  SET delaystop 0
  TEST parent = ST_RUN
  AND activeProgram = 1
		SET errorCode 0
    SETSTATE ST_RESET
  ENDTEST
END

State=ST_RESET
	SET TimeInPalletB timeInPalletB
	SET loaded 0
	SET errorCode 0
  TEST WorkCellFirstRun = 1
    SET restart 0
  ENDTEST
	;set state = ST_IDLE for alle path's and set maxidx = 0 in pathTable
	;stafet value
  TEST resetpreload = 0
    SET resetpreload 1
  ENDTEST
  TEST resetpreload = 3
    SET resetpreload 0
    TEST restart = 0
	    SETSTATE ST_START
    ELSE
      SETSTATE ST_RESTART
    ENDTEST
  ENDTEST
END

;*******************************************
;* RESTART FROM SOMEWHERE
;*******************************************
State=ST_RESTART
	;  kun een bopt fil for hver robot
	;  en ppscripttype for hver konfiguration(tool)
  SET delaystop 0 
  TEST home_home.state < ST_INACTIVE
    LOAD home_home homeHigh home 
    SETSTATE ST_WAIT_HOME_HOME_LOADED
  ENDTEST
END
;*******************************************
;* START FROM SCRATCH
;*******************************************
State=ST_START
;  kun een bopt fil for hver robot
;  en ppscripttype for hver konfiguration(tool)
  SET delaystop 0
  TEST home_home.state < ST_INACTIVE
	  TEST casekind = casekind_5KgPlast
				SETITEM item item5KgPlast
    ENDTEST  
		TEST nspattern = nspattern_5KgPlast_40
			SETPATTERN patternB p5KgPlast_40
		ENDTEST
;nessesary ?
    SET moveBag 0
		SET wBItem wBItems
    SET cBItem sBItem
    SET userPalletOut 1
    LOAD home_home homeHigh home 
	  SETSTATE ST_WAIT_HOME_HOME_LOADED
  ENDTEST
END
;*******************************************
;* ST_WAIT_HOME_HOME_LOADED
;*******************************************
State=ST_WAIT_HOME_HOME_LOADED
  TEST home_home.state = ST_LOADED
	  TEST home_conveyorB.state < ST_INACTIVE
      SETFRAME toFrame conveyorBplast
      LOAD home_conveyorB home toFrame 
      SET delaystop 0
      PRINT home_home
      EXEC home_home
      SETSTATE ST_HOME_HOME
    ENDTEST
  ENDTEST
END
;*******************************************
;*
;*       F R A M E - S T A T E S
;*
;*******************************************
;*******************************************
;* ST_HOME
;*******************************************
State=ST_HOME
  TEST parent = ST_RUN
	AND roboMessageCached = 0
    TEST home_conveyorB.state = ST_LOADED
			TEST loaded = 0
      AND conveyorB_palletB.state < ST_INACTIVE
      AND conveyorB_home.state < ST_INACTIVE
        TEST userPalletOut = 1
        OR cBItem >= wBItem
          SET nextpalb 1
          SET userPalletOut 0
          SET cBItem sBItem 
	      ENDTEST
;wait until PS can be trusted
        TEST PS = ST_HP_READY
			  AND Pallebane6 = ST_READY_ROBOT
			  AND nextpalb = 0
          SETFRAME fromFrame conveyorBplast
          LOAD conveyorB_home fromFrame home
		  		;*******************************************
          SET patternB.idx cBItem 
          SETFRAME toFrame palletB
          CALC toFrame.x = toFrame.x + patternB.wcp.x 
          CALC toFrame.y = toFrame.y + patternB.wcp.y 
          CALC toFrame.z = toFrame.z + patternB.wcp.z 
          CALC toFrame.v = toFrame.v + patternB.wcp.v 
          CALC toFrame.w = toFrame.w + patternB.wcp.w 
          LOAD conveyorB_palletB fromFrame toFrame
				  SET loaded 1
        ENDTEST
			ENDTEST
			TEST loaded = 1
			AND Pallebane6 = ST_READY_ROBOT
;      AND Tool = ST_GO
			AND nextpalb = 0
				SET delaystop 1
				SET restart 1
				PRINT home_conveyorB
        EXEC home_conveyorB 
				SETSTATE ST_HOME_CONVEYORB
			ENDTEST
    ENDTEST
  ELSE
		TEST roboMessageCached = 333
			SET errorCode 333
			SETSTATE ST_ERROR
		ELSE
			SETSTATE ST_IDLE
		ENDTEST
  ENDTEST
END
;*******************************************
;* ST_CONVEYORB
;*******************************************
State=ST_CONVEYORB
  TEST ConveyorOut = ST_READY_ROBOT
  AND moveBag = 0
    SET moveBag 1
  ENDTEST
	TEST parent = ST_RUN
	AND Pallebane6 = ST_READY_ROBOT
	AND userPalletOut = 0
		TEST conveyorB_palletB.state = ST_LOADED
			TEST loaded = 0
			AND palletB_home.state < ST_INACTIVE
			AND palletB_conveyorB.state < ST_INACTIVE
        TEST PS = ST_HP_READY
  				;*****************************************
          SET patternB.idx cBItem 
		  		SETFRAME fromFrame palletB
          CALC fromFrame.x = fromFrame.x + patternB.wcp.x 
          CALC fromFrame.y = fromFrame.y + patternB.wcp.y 
          CALC fromFrame.z = fromFrame.z + patternB.wcp.z 
          CALC fromFrame.v = fromFrame.v + patternB.wcp.v 
          CALC fromFrame.w = fromFrame.w + patternB.wcp.w 
	  			SETFRAME toFrame conveyorBplast
				  LOAD palletB_conveyorB fromFrame toFrame
			    ;*******************************************
				  LOAD palletB_home fromFrame home
				  SET loaded 1
        ENDTEST
			ENDTEST
			TEST loaded = 1
;			AND Tool = ST_GO
      AND moveBag = 3
        SET moveBag 0
				SET delaystop 1
				PRINT conveyorB_palletB
        EXEC conveyorB_palletB
				SETSTATE ST_CONVEYORB_PALLETB
			ENDTEST
		ENDTEST
	ELSE
	  TEST userPalletOut = 1
	  OR parent != ST_RUN
	  OR Pallebane6 != ST_READY_ROBOT
      TEST conveyorB_home.state = ST_LOADED
		  AND ConveyorOut != ST_SEND
			  TEST home_conveyorB.state < ST_INACTIVE 
;			  AND Tool = ST_GO
				  ;*******************************************
  				SETFRAME toFrame conveyorBplast
			  	LOAD home_conveyorB home toFrame 
				  ;*******************************************
          PRINT conveyorB_home
				  EXEC conveyorB_home 
				  SETSTATE ST_CONVEYORB_HOME
			  ENDTEST
			ENDTEST
		ENDTEST
	ENDTEST
END

;*******************************************
;* ST_PALLETB
;*******************************************
State=ST_PALLETB
  TEST parent = ST_RUN
	AND Pallebane6 = ST_READY_ROBOT
	AND cBItem < wBItem 
	AND userPalletOut = 0
	AND roboMessageCached = 0
		TEST palletB_conveyorB.state = ST_LOADED
			TEST loaded != 1
		  AND conveyorB_palletB.state < ST_INACTIVE
			AND conveyorB_home.state < ST_INACTIVE 
				SETFRAME fromFrame conveyorBplast
			  ;*******************************************
        SET patternB.idx cBItem 
        SETFRAME toFrame palletB
        CALC toFrame.x = toFrame.x + patternB.wcp.x 
        CALC toFrame.y = toFrame.y + patternB.wcp.y 
        CALC toFrame.z = toFrame.z + patternB.wcp.z 
        CALC toFrame.v = toFrame.v + patternB.wcp.v 
        CALC toFrame.w = toFrame.w + patternB.wcp.w 
				LOAD conveyorB_palletB fromFrame toFrame
				;*******************************************
		    LOAD conveyorB_home fromFrame home
				SET loaded 1
				;*******************************************
			ENDTEST
			TEST loaded = 1
;			AND Tool = ST_GO
				SET delaystop 1
		    PRINT palletB_conveyorB
        EXEC palletB_conveyorB
		    SETSTATE ST_PALLETB_CONVEYORB
		  ENDTEST
		ENDTEST
	ELSE
;conditions that send us HOME
		TEST TimeInPalletB = 1
		OR parent != ST_RUN
		OR cBItem >= wBItem 
		OR userPalletOut = 1
		OR roboMessageCached != 0
			TEST palletB_home.state = ST_LOADED
				TEST loaded != 2
				AND home_conveyorB.state < ST_INACTIVE
					;*******************************************
					SETFRAME toFrame conveyorBplast
					LOAD home_conveyorB home toFrame 
					;*******************************************
					SET loaded 2
				ENDTEST
				TEST loaded = 2
;				AND Tool = ST_GO
					PRINT palletB_home
          EXEC palletB_home 
					SETSTATE ST_PALLETB_HOME
				ENDTEST
			ENDTEST
		ENDTEST
	ENDTEST
END
;*******************************************
;*
;*       P A T H - S T A T E S
;*
;*******************************************
;*******************************************
;* ST_HOME_HOME
;*******************************************
State=ST_HOME_HOME
  TEST home_home.state = ST_EXECUTING
	  SET modhold 0
	  SET griber 0
  ELSE
    TEST home_home.state = ST_FINISHED
			SET loaded 0
      SETSTATE ST_HOME
    ELSE
      TEST home_home.state = ST_ERROR
        TEST parent = ST_IDLE
          SETSTATE ST_IDLE
        ENDTEST 
      ENDTEST
    ENDTEST
  ENDTEST
END
;*******************************************
;* ST_HOME_CONVEYORB
;*******************************************
State=ST_HOME_CONVEYORB
  TEST home_conveyorB.state = ST_EXECUTING
	  SET modhold 0
	  SET griber 0
  ELSE
    TEST home_conveyorB.state = ST_FINISHED
			SET loaded 0
      SETSTATE ST_CONVEYORB
    ELSE
      TEST home_conveyorB.state = ST_ERROR
        TEST parent = ST_IDLE
          SETSTATE ST_IDLE
        ENDTEST 
      ENDTEST
    ENDTEST
  ENDTEST
END
;*******************************************
;* ST_CONVEYORB_HOME
;*******************************************
State=ST_CONVEYORB_HOME
  TEST conveyorB_home.state = ST_EXECUTING
		SET delaystop 0
	  SET modhold 0
	  SET griber 0
  ELSE
		TEST conveyorB_home.state = ST_FINISHED
			SET loaded 0
			SETSTATE ST_HOME
		ELSE
			TEST conveyorB_home.state = ST_ERROR
				TEST parent = ST_IDLE
					SETSTATE ST_IDLE
				ENDTEST 
			ENDTEST
		ENDTEST
	ENDTEST
END
;*******************************************
;* ST_CONVEYORB_PALLETB
;*******************************************
State=ST_CONVEYORB_PALLETB
  TEST conveyorB_palletB.state = ST_EXECUTING
		TEST pathtype = 13
		AND axis_t > 0
		AND axis_t < 400000
	    SET modhold 1
	    SET griber 0
		ENDTEST
;try early open
		TEST pathtype = 13
		AND axis_t > 900000
		AND axis_t < 990000
	    SET modhold 1
	    SET griber 1
		ENDTEST
  ELSE
    TEST conveyorB_palletB.state = ST_FINISHED
	    SET modhold 1
	    SET griber 1
      CALC cBItem = cBItem + 1
      PRINT cBItem
			SET loaded 0
			TIMEOUT TimeInPalletB ST_PALLETB
      SETSTATE ST_PALLETB
    ELSE
      TEST conveyorB_palletB.state = ST_ERROR
        TEST parent = ST_IDLE
          SETSTATE ST_IDLE
        ENDTEST 
      ENDTEST
    ENDTEST
  ENDTEST
END
;*******************************************
;* ST_PALLETB_CONVEYORB
;*******************************************
State=ST_PALLETB_CONVEYORB
  TEST palletB_conveyorB.state = ST_EXECUTING
  ELSE
    TEST palletB_conveyorB.state = ST_FINISHED
			SET loaded 0
      SETSTATE ST_CONVEYORB
    ELSE
      TEST palletB_conveyorB.state = ST_ERROR
        TEST parent = ST_IDLE
          SETSTATE ST_IDLE
        ENDTEST 
      ENDTEST
    ENDTEST
  ENDTEST
END
;*******************************************
;* ST_PALLETB_HOME
;*******************************************
State=ST_PALLETB_HOME
  TEST palletB_home.state = ST_EXECUTING
		SET delaystop 0
  ELSE
    TEST palletB_home.state = ST_FINISHED
			SET loaded 0
      SETSTATE ST_HOME
    ELSE
      TEST palletB_home.state = ST_ERROR
        TEST parent = ST_IDLE
          SETSTATE ST_IDLE
        ENDTEST 
      ENDTEST
    ENDTEST
  ENDTEST
END
